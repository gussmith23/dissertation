@article{wang2020spores,
  author    = {Yisu Remy Wang and
               Shana Hutchison and
               Dan Suciu and
               Bill Howe and
               Jonathan Leang},
  title     = {{SPORES:} Sum-Product Optimization via Relational Equality Saturation
               for Large Scale Linear Algebra},
  journal   = {Proc. {VLDB} Endow.},
  volume    = {13},
  number    = {11},
  pages     = {1919--1932},
  year      = {2020},
  url       = {http://www.vldb.org/pvldb/vol13/p1919-wang.pdf},
  timestamp = {Mon, 17 Aug 2020 18:32:39 +0200},
  biburl    = {https://dblp.org/rec/journals/pvldb/WangHSHL20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{yang2021equality,
  title={Equality saturation for tensor graph superoptimization},
  author={Yang, Yichen and Phothilimthana, Phitchaya and Wang, Yisu and Willsey, Max and Roy, Sudip and Pienaar, Jacques},
  journal={Proceedings of Machine Learning and Systems},
  volume={3},
  pages={255--268},
  year={2021}
}

@article{chiang2021named,
  title={Named Tensor Notation},
  author={Chiang, David and Rush, Alexander M and Barak, Boaz},
  journal={arXiv preprint arXiv:2102.13196},
  year={2021}
}

@inproceedings{chen2018tvm,
  title={$\{$TVM$\}$: An automated end-to-end optimizing compiler for deep learning},
  author={Chen, Tianqi and Moreau, Thierry and Jiang, Ziheng and Zheng, Lianmin and Yan, Eddie and Shen, Haichen and Cowan, Meghan and Wang, Leyuan and Hu, Yuwei and Ceze, Luis and others},
  booktitle={13th $\{$USENIX$\}$ Symposium on Operating Systems Design and Implementation ($\{$OSDI$\}$ 18)},
  pages={578--594},
  year={2018}
}

@article{vasilache2018tensor,
  title={Tensor comprehensions: Framework-agnostic high-performance machine learning abstractions},
  author={Vasilache, Nicolas and Zinenko, Oleksandr and Theodoridis, Theodoros and Goyal, Priya and DeVito, Zachary and Moses, William S and Verdoolaege, Sven and Adams, Andrew and Cohen, Albert},
  journal={arXiv preprint arXiv:1802.04730},
  year={2018}
}

@article{willsey2021egg,
  title={egg: fast and extensible equality saturation},
  author={Willsey, Max and Nandi, Chandrakana and Wang, Yisu Remy and Flatt, Oliver and Tatlock, Zachary and Panchekha, Pavel},
  journal={Proceedings of the ACM on Programming Languages},
  volume={5},
  number={POPL},
  pages={1--29},
  year={2021},
  publisher={ACM New York, NY, USA}
}

@article{jouppi2017tpu,
  author     = {Jouppi, Norman P. and Young, Cliff and Patil, Nishant and Patterson, David and Agrawal, Gaurav and Bajwa, Raminder and Bates, Sarah and Bhatia, Suresh and Boden, Nan and Borchers, Al and Boyle, Rick and Cantin, Pierre-luc and Chao, Clifford and Clark, Chris and Coriell, Jeremy and Daley, Mike and Dau, Matt and Dean, Jeffrey and Gelb, Ben and Ghaemmaghami, Tara Vazir and Gottipati, Rajendra and Gulland, William and Hagmann, Robert and Ho, C. Richard and Hogberg, Doug and Hu, John and Hundt, Robert and Hurt, Dan and Ibarz, Julian and Jaffey, Aaron and Jaworski, Alek and Kaplan, Alexander and Khaitan, Harshit and Killebrew, Daniel and Koch, Andy and Kumar, Naveen and Lacy, Steve and Laudon, James and Law, James and Le, Diemthu and Leary, Chris and Liu, Zhuyuan and Lucke, Kyle and Lundin, Alan and MacKean, Gordon and Maggiore, Adriana and Mahony, Maire and Miller, Kieran and Nagarajan, Rahul and Narayanaswami, Ravi and Ni, Ray and Nix, Kathy and Norrie, Thomas and Omernick, Mark and Penukonda, Narayana and Phelps, Andy and Ross, Jonathan and Ross, Matt and Salek, Amir and Samadiani, Emad and Severn, Chris and Sizikov, Gregory and Snelham, Matthew and Souter, Jed and Steinberg, Dan and Swing, Andy and Tan, Mercedes and Thorson, Gregory and Tian, Bo and Toma, Horia and Tuttle, Erick and Vasudevan, Vijay and Walter, Richard and Wang, Walter and Wilcox, Eric and Yoon, Doe Hyun},
  title      = {In-Datacenter Performance Analysis of a Tensor Processing Unit},
  year       = {2017},
  issue_date = {May 2017},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {45},
  number     = {2},
  issn       = {0163-5964},
  url        = {https://doi.org/10.1145/3140659.3080246},
  doi        = {10.1145/3140659.3080246},
  journal    = {SIGARCH Comput. Archit. News},
  month      = jun,
  pages      = {1–12},
  numpages   = {12},
  location = {Seaside, CA, USA},
}

@INPROCEEDINGS{krizhevsky2012conv,
    author = {Alex Krizhevsky and Ilya Sutskever and Geoffrey E. Hinton},
    title = {Imagenet classification with deep convolutional neural networks},
    booktitle = {Advances in Neural Information Processing Systems},
    year = {2012},
    pages = {}
}

@article{reuther2019survey,
   title={Survey and Benchmarking of Machine Learning Accelerators},
   ISBN={9781728150208},
   url={http://dx.doi.org/10.1109/HPEC.2019.8916327},
   DOI={10.1109/hpec.2019.8916327},
   journal={2019 IEEE High Performance Extreme Computing Conference (HPEC)},
   publisher={IEEE},
   author={Reuther, Albert and Michaleas, Peter and Jones, Michael and Gadepally, Vijay and Samsi, Siddharth and Kepner, Jeremy},
   year={2019},
   month={Sep}
}

@inproceedings{ragan2013halide,
 author = {Ragan-Kelley, Jonathan and Barnes, Connelly and Adams, Andrew and Paris, Sylvain and Durand, Fr{\'e}do and Amarasinghe, Saman},
 title = {Halide: A Language and Compiler for Optimizing Parallelism, Locality, and Recomputation in Image Processing Pipelines},
 booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '13},
 year = {2013},
 isbn = {978-1-4503-2014-6},
 location = {Seattle, Washington, USA},
 pages = {519--530},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2491956.2462176},
 doi = {10.1145/2491956.2462176},
 acmid = {2462176},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {autotuning, compiler, domain specific language, gpu, image processing, locality, optimization, parallelism, redundant computation, vectorization},
}

@misc{mlir,
    title={MLIR: A Compiler Infrastructure for the End of Moore's Law},
    author={Chris Lattner and Mehdi Amini and Uday Bondhugula and Albert Cohen and Andy Davis and Jacques Pienaar and River Riddle and Tatiana Shpeisman and Nicolas Vasilache and Oleksandr Zinenko},
    year={2020},
    eprint={2002.11054},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@misc{pytorch,
    title={PyTorch: An Imperative Style, High-Performance Deep Learning Library},
    author={Adam Paszke and Sam Gross and Francisco Massa and Adam Lerer and James Bradbury and Gregory Chanan and Trevor Killeen and Zeming Lin and Natalia Gimelshein and Luca Antiga and Alban Desmaison and Andreas Köpf and Edward Yang and Zach DeVito and Martin Raison and Alykhan Tejani and Sasank Chilamkurthy and Benoit Steiner and Lu Fang and Junjie Bai and Soumith Chintala},
    year={2019},
    eprint={1912.01703},
    archivePrefix={arXiv},
    primaryClass={cs.LG},
    url={https://arxiv.org/abs/1912.01703}
}

@inproceedings{tvm,
  author = {Tianqi Chen and Thierry Moreau and Ziheng Jiang and Lianmin Zheng and Eddie Yan and Haichen Shen and Meghan Cowan and Leyuan Wang and Yuwei Hu and Luis Ceze and Carlos Guestrin and Arvind Krishnamurthy},
  title = {{TVM}: An Automated End-to-End Optimizing Compiler for Deep Learning},
  booktitle = {13th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 18)},
  year = {2018},
  isbn = {978-1-931971-47-8},
  address = {Carlsbad, CA},
  pages = {578--594},
  url = {https://www.usenix.org/conference/osdi18/presentation/chen},
  publisher = {{USENIX} Association},
}

@misc{byoc,
  author       = {Chen, Zhi and Yu, Cody},
  title        = {How to Bring Your Own Codegen to TVM},
  year         = {2020},
  journal      = {Apache TVM Blog},
  publisher    = {Apache Foundation},
  howpublished = {\url{https://tvm.apache.org/2020/07/15/how-to-bring-your-own-codegen-to-tvm}}
}

@inproceedings{yang2020interstellar,
author = {Yang, Xuan and Gao, Mingyu and Liu, Qiaoyi and Setter, Jeff and Pu, Jing and Nayak, Ankita and Bell, Steven and Cao, Kaidi and Ha, Heonjae and Raina, Priyanka and Kozyrakis, Christos and Horowitz, Mark},
title = {Interstellar: Using Halide's Scheduling Language to Analyze DNN Accelerators},
year = {2020},
isbn = {9781450371025},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3373376.3378514},
doi = {10.1145/3373376.3378514},
abstract = {We show that DNN accelerator micro-architectures and their program mappings represent specific choices of loop order and hardware parallelism for computing the seven nested loops of DNNs, which enables us to create a formal taxonomy of all existing dense DNN accelerators. Surprisingly, the loop transformations needed to create these hardware variants can be precisely and concisely represented by Halide's scheduling language. By modifying the Halide compiler to generate hardware, we create a system that can fairly compare these prior accelerators. As long as proper loop blocking schemes are used, and the hardware can support mapping replicated loops, many different hardware dataflows yield similar energy efficiency with good performance. This is because the loop blocking can ensure that most data references stay on-chip with good locality and the processing units have high resource utilization. How resources are allocated, especially in the memory system, has a large impact on energy and performance. By optimizing hardware resource allocation while keeping throughput constant, we achieve up to 4.2X energy improvement for Convolutional Neural Networks (CNNs), 1.6X and 1.8X improvement for Long Short-Term Memories (LSTMs) and multi-layer perceptrons (MLPs), respectively.},
booktitle = {Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {369–383},
numpages = {15},
keywords = {dataflow, domain specific language, neural networks},
location = {Lausanne, Switzerland},
series = {ASPLOS '20}
}

@article{relay,
  author    = {Jared Roesch and
               Steven Lyubomirsky and
               Marisa Kirisame and
               Josh Pollock and
               Logan Weber and
               Ziheng Jiang and
               Tianqi Chen and
               Thierry Moreau and
               Zachary Tatlock},
  title     = {Relay: {A} High-Level {IR} for Deep Learning},
  journal   = {CoRR},
  volume    = {abs/1904.08368},
  year      = {2019},
  url       = {http://arxiv.org/abs/1904.08368},
  archivePrefix = {arXiv},
  eprint    = {1904.08368},
  timestamp = {Fri, 26 Apr 2019 13:18:53 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1904-08368.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{newcomb2020halide-rewrite,
author = {Newcomb, Julie L. and Adams, Andrew and Johnson, Steven and Bodik, Rastislav and Kamil, Shoaib},
title = {Verifying and Improving Halide’s Term Rewriting System with Program Synthesis},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428234},
doi = {10.1145/3428234},
journal = {Proc. ACM Program. Lang.},
month = nov,
articleno = {166},
numpages = {28},
keywords = {term rewriting system, synthesis, verification}
}

@article{hagedorn2020func-high-perf,
author = {Hagedorn, Bastian and Lenfers, Johannes and Kundefinedhler, Thomas and Qin, Xueying and Gorlatch, Sergei and Steuwer, Michel},
title = {Achieving High-Performance the Functional Way: A Functional Pearl on Expressing High-Performance Optimizations as Rewrite Strategies},
year = {2020},
issue_date = {August 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {ICFP},
url = {https://doi.org/10.1145/3408974},
doi = {10.1145/3408974},
abstract = {Optimizing programs to run efficiently on modern parallel hardware is hard but crucial for many applications. The predominantly used imperative languages - like C or OpenCL - force the programmer to intertwine the code describing functionality and optimizations. This results in a portability nightmare that is particularly problematic given the accelerating trend towards specialized hardware devices to further increase efficiency. Many emerging DSLs used in performance demanding domains such as deep learning or high-performance image processing attempt to simplify or even fully automate the optimization process. Using a high-level - often functional - language, programmers focus on describing functionality in a declarative way. In some systems such as Halide or TVM, a separate schedule specifies how the program should be optimized. Unfortunately, these schedules are not written in well-defined programming languages. Instead, they are implemented as a set of ad-hoc predefined APIs that the compiler writers have exposed. In this functional pearl, we show how to employ functional programming techniques to solve this challenge with elegance. We present two functional languages that work together - each addressing a separate concern. RISE is a functional language for expressing computations using well known functional data-parallel patterns. ELEVATE is a functional language for describing optimization strategies. A high-level RISE program is transformed into a low-level form using optimization strategies written in ELEVATE . From the rewritten low-level program high-performance parallel code is automatically generated. In contrast to existing high-performance domain-specific systems with scheduling APIs, in our approach programmers are not restricted to a set of built-in operations and optimizations but freely define their own computational patterns in RISE and optimization strategies in ELEVATE in a composable and reusable way. We show how our holistic functional approach achieves competitive performance with the state-of-the-art imperative systems Halide and TVM.},
journal = {Proc. ACM Program. Lang.},
month = aug,
articleno = {92},
numpages = {29},
keywords = {Rewrite Rules, Optimization Strategies, Strategy Languages, ELEVATE}
}

@article{taco,
 author = {Kjolstad, Fredrik and Kamil, Shoaib and Chou, Stephen and Lugato, David and Amarasinghe, Saman},
 title = {The Tensor Algebra Compiler},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {October 2017},
 volume = {1},
 number = {OOPSLA},
 month = oct,
 year = {2017},
 issn = {2475-1421},
 pages = {77:1--77:29},
 articleno = {77},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/3133901},
 doi = {10.1145/3133901},
 acmid = {3133901},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code generation, iteration graphs, linear algebra, merge lattices, parallelism, performance, sparse data structures, tensor algebra, tensors}
}

@inproceedings{baghdadi2019tiramisu,
  title={Tiramisu: A polyhedral compiler for expressing fast and portable code},
  author={Baghdadi, Riyadh and Ray, Jessica and Romdhane, Malek Ben and Del Sozzo, Emanuele and Akkas, Abdurrahman and Zhang, Yunming and Suriana, Patricia and Kamil, Shoaib and Amarasinghe, Saman},
  booktitle={2019 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages={193--205},
  year={2019},
  organization={IEEE},
  publisher={IEEE},
  address={USA}
}

@inproceedings{10.1145/2908080.2908105,
author = {Truong, Leonard and Barik, Rajkishore and Totoni, Ehsan and Liu, Hai and Markley, Chick and Fox, Armando and Shpeisman, Tatiana},
title = {Latte: A Language, Compiler, and Runtime for Elegant and Efficient Deep Neural Networks},
year = {2016},
isbn = {9781450342612},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2908080.2908105},
doi = {10.1145/2908080.2908105},
abstract = { Deep neural networks (DNNs) have undergone a surge in popularity with consistent advances in the state of the art for tasks including image recognition, natural language processing, and speech recognition. The computationally expensive nature of these networks has led to the proliferation of implementations that sacrifice abstraction for high performance. In this paper, we present Latte, a domain-specific language for DNNs that provides a natural abstraction for specifying new layers without sacrificing performance. Users of Latte express DNNs as ensembles of neurons with connections between them. The Latte compiler synthesizes a program based on the user specification, applies a suite of domain-specific and general optimizations, and emits efficient machine code for heterogeneous architectures. Latte also includes a communication runtime for distributed memory data-parallelism. Using networks described using Latte, we demonstrate 3-6x speedup over Caffe (C++/MKL) on the three state-of-the-art ImageNet models executing on an Intel Xeon E5-2699 v3 x86 CPU. },
booktitle = {Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {209–223},
numpages = {15},
keywords = {Domain Specific Language, Deep Learning, Neural Networks, Compiler, Optimization},
location = {Santa Barbara, CA, USA},
series = {PLDI '16}
}

@article{latte,
author = {Truong, Leonard and Barik, Rajkishore and Totoni, Ehsan and Liu, Hai and Markley, Chick and Fox, Armando and Shpeisman, Tatiana},
title = {Latte: A Language, Compiler, and Runtime for Elegant and Efficient Deep Neural Networks},
year = {2016},
issue_date = {June 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {51},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/2980983.2908105},
doi = {10.1145/2980983.2908105},
abstract = { Deep neural networks (DNNs) have undergone a surge in popularity with consistent advances in the state of the art for tasks including image recognition, natural language processing, and speech recognition. The computationally expensive nature of these networks has led to the proliferation of implementations that sacrifice abstraction for high performance. In this paper, we present Latte, a domain-specific language for DNNs that provides a natural abstraction for specifying new layers without sacrificing performance. Users of Latte express DNNs as ensembles of neurons with connections between them. The Latte compiler synthesizes a program based on the user specification, applies a suite of domain-specific and general optimizations, and emits efficient machine code for heterogeneous architectures. Latte also includes a communication runtime for distributed memory data-parallelism. Using networks described using Latte, we demonstrate 3-6x speedup over Caffe (C++/MKL) on the three state-of-the-art ImageNet models executing on an Intel Xeon E5-2699 v3 x86 CPU. },
journal = {SIGPLAN Not.},
month = jun,
pages = {209–223},
numpages = {15},
keywords = {Domain Specific Language, Neural Networks, Deep Learning, Compiler, Optimization}
}

@inproceedings{lift,
author = {Steuwer, Michel and Remmelg, Toomas and Dubach, Christophe},
title = {Lift: A Functional Data-Parallel IR for High-Performance GPU Code Generation},
year = {2017},
isbn = {9781509049318},
publisher = {IEEE Press},
abstract = { Parallel patterns (e.g., map, reduce) have gained traction as an abstraction for targeting parallel accelerators and are a promising answer to the performance portability problem. However, compiling high-level programs into efficient low- level parallel code is challenging. Current approaches start from a high-level parallel IR and proceed to emit GPU code directly in one big step. Fixed strategies are used to optimize and map parallelism exploiting properties of a particular GPU generation leading to performance portability issues. We introduce the Lift IR, a new data-parallel IR which encodes OpenCL-specific constructs as functional patterns. Our prior work has shown that this functional nature simplifies the exploration of optimizations and mapping of parallelism from portable high-level programs using rewrite-rules. This paper describes how Lift IR programs are compiled into efficient OpenCL code. This is non-trivial as many performance sensitive details such as memory allocation, array accesses or synchronization are not explicitly represented in the Lift IR. We present techniques which overcome this challenge by exploiting the pattern’s high-level semantics. Our evaluation shows that the Lift IR is flexible enough to express GPU programs with complex optimizations achieving performance on par with manually optimized code. },
booktitle = {Proceedings of the 2017 International Symposium on Code Generation and Optimization},
pages = {74–85},
numpages = {12},
location = {Austin, USA},
series = {CGO '17}
}

@inproceedings{10.1145/2737924.2737959,
author = {Panchekha, Pavel and Sanchez-Stern, Alex and Wilcox, James R. and Tatlock, Zachary},
title = {Automatically Improving Accuracy for Floating Point Expressions},
year = {2015},
isbn = {9781450334686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2737924.2737959},
doi = {10.1145/2737924.2737959},
abstract = { Scientific and engineering applications depend on floating point arithmetic to approximate real arithmetic. This approximation introduces rounding error, which can accumulate to produce unacceptable results. While the numerical methods literature provides techniques to mitigate rounding error, applying these techniques requires manually rearranging expressions and understanding the finer details of floating point arithmetic. We introduce Herbie, a tool which automatically discovers the rewrites experts perform to improve accuracy. Herbie's heuristic search estimates and localizes rounding error using sampled points (rather than static error analysis), applies a database of rules to generate improvements, takes series expansions, and combines improvements for different input regions. We evaluated Herbie on examples from a classic numerical methods textbook, and found that Herbie was able to improve accuracy on each example, some by up to 60 bits, while imposing a median performance overhead of 40%. Colleagues in machine learning have used Herbie to significantly improve the results of a clustering algorithm, and a mathematical library has accepted two patches generated using Herbie. },
booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {1–11},
numpages = {11},
keywords = {numerical accuracy, Floating point, program rewriting},
location = {Portland, OR, USA},
series = {PLDI '15}
}


@article{herbie,
author = {Panchekha, Pavel and Sanchez-Stern, Alex and Wilcox, James R. and Tatlock, Zachary},
title = {Automatically Improving Accuracy for Floating Point Expressions},
year = {2015},
issue_date = {June 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {50},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/2813885.2737959},
doi = {10.1145/2813885.2737959},
abstract = { Scientific and engineering applications depend on floating point arithmetic to approximate real arithmetic. This approximation introduces rounding error, which can accumulate to produce unacceptable results. While the numerical methods literature provides techniques to mitigate rounding error, applying these techniques requires manually rearranging expressions and understanding the finer details of floating point arithmetic. We introduce Herbie, a tool which automatically discovers the rewrites experts perform to improve accuracy. Herbie's heuristic search estimates and localizes rounding error using sampled points (rather than static error analysis), applies a database of rules to generate improvements, takes series expansions, and combines improvements for different input regions. We evaluated Herbie on examples from a classic numerical methods textbook, and found that Herbie was able to improve accuracy on each example, some by up to 60 bits, while imposing a median performance overhead of 40%. Colleagues in machine learning have used Herbie to significantly improve the results of a clustering algorithm, and a mathematical library has accepted two patches generated using Herbie. },
journal = {SIGPLAN Not.},
month = jun,
pages = {1–11},
numpages = {11},
keywords = {Floating point, numerical accuracy, program rewriting}
}

@inproceedings{szalinski,
author = {Nandi, Chandrakana and Willsey, Max and Anderson, Adam and Wilcox, James R. and Darulova, Eva and Grossman, Dan and Tatlock, Zachary},
title = {Synthesizing Structured CAD Models with Equality Saturation and Inverse Transformations},
year = {2020},
isbn = {9781450376136},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3386012},
doi = {10.1145/3385412.3386012},
abstract = {Recent program synthesis techniques help users customize CAD models(e.g., for 3D printing) by decompiling low-level triangle meshes to Constructive Solid Geometry (CSG) expressions. Without loops or functions, editing CSG can require many coordinated changes, and existing mesh decompilers use heuristics that can obfuscate high-level structure. This paper proposes a second decompilation stage to robustly "shrink" unstructured CSG expressions into more editable programs with map and fold operators. We present Szalinski, a tool that uses Equality Saturation with semantics-preserving CAD rewrites to efficiently search for smaller equivalent programs. Szalinski relies on inverse transformations, a novel way for solvers to speculatively add equivalences to an E-graph. We qualitatively evaluate Szalinski in case studies, show how it composes with an existing mesh decompiler, and demonstrate that Szalinski can shrink large models in seconds.},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {31–44},
numpages = {14},
keywords = {Computer-Aided Design, Decompilation, Program Synthesis, Equality Saturation},
location = {London, UK},
series = {PLDI 2020}
}

@inproceedings{10.1145/1706299.1706346,
author = {Dias, Jo\~{a}o and Ramsey, Norman},
title = {Automatically Generating Instruction Selectors Using Declarative Machine Descriptions},
year = {2010},
isbn = {9781605584799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1706299.1706346},
doi = {10.1145/1706299.1706346},
abstract = {Despite years of work on retargetable compilers, creating a good, reliable back end for an optimizing compiler still entails a lot of hard work. Moreover, a critical component of the back end---the instruction selector---must be written by a person who is expert in both the compiler's intermediate code and the target machine's instruction set. By generating the instruction selector from declarative machine descriptions we have (a) made it unnecessary for one person to be both a compiler expert and a machine expert, and (b) made creating an optimizing back end easier than ever before.Our achievement rests on two new results. First, finding a mapping from intermediate code to machine code is an undecidable problem. Second, using heuristic search, we can find mappings for machines of practical interest in at most a few minutes of CPU time. Our most significant new idea is that heuristic search should be controlled by algebraic laws. Laws are used not only to show when a sequence of instructions implements part of an intermediate code, but also to limit the search: we drop a sequence of instructions not when it gets too long or when it computes too complicated a result, but when too much reasoning will be required to show that the result computed might be useful.},
booktitle = {Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {403–416},
numpages = {14},
keywords = {retargetable compilers, declarative machine descriptions, instruction selection},
location = {Madrid, Spain},
series = {POPL '10}
}


@article{dias2010instruction-selection,
author = {Dias, Jo\~{a}o and Ramsey, Norman},
title = {Automatically Generating Instruction Selectors Using Declarative Machine Descriptions},
year = {2010},
issue_date = {January 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {1},
issn = {0362-1340},
url = {https://doi.org/10.1145/1707801.1706346},
doi = {10.1145/1707801.1706346},
abstract = {Despite years of work on retargetable compilers, creating a good, reliable back end for an optimizing compiler still entails a lot of hard work. Moreover, a critical component of the back end---the instruction selector---must be written by a person who is expert in both the compiler's intermediate code and the target machine's instruction set. By generating the instruction selector from declarative machine descriptions we have (a) made it unnecessary for one person to be both a compiler expert and a machine expert, and (b) made creating an optimizing back end easier than ever before.Our achievement rests on two new results. First, finding a mapping from intermediate code to machine code is an undecidable problem. Second, using heuristic search, we can find mappings for machines of practical interest in at most a few minutes of CPU time. Our most significant new idea is that heuristic search should be controlled by algebraic laws. Laws are used not only to show when a sequence of instructions implements part of an intermediate code, but also to limit the search: we drop a sequence of instructions not when it gets too long or when it computes too complicated a result, but when too much reasoning will be required to show that the result computed might be useful.},
journal = {SIGPLAN Not.},
month = jan,
pages = {403–416},
numpages = {14},
keywords = {instruction selection, declarative machine descriptions, retargetable compilers}
}

@INPROCEEDINGS{polyhedral-survey,
  author={A. {Simbürger} and S. {Apel} and A. {Größlinger} and C. {Lengauer}},
  booktitle={2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)}, 
  title={The potential of polyhedral optimization: An empirical study}, 
  year={2013},
  volume={},
  number={},
  pages={508-518},
  doi={10.1109/ASE.2013.6693108}}

@misc{nvidia2020nhwc,
  author       = {NVIDIA},
  title        = {Convolutional Layers User Guide},
  howpublished = {\url{https://docs.nvidia.com/deeplearning/performance/dl-performance-convolutional/index.html}},
  publisher    = {Nvidia},
  year         = {2020}
}

@inproceedings{im2col,
  TITLE = {{High Performance Convolutional Neural Networks for Document Processing}},
  AUTHOR = {Chellapilla, Kumar and Puri, Sidd and Simard, Patrice},
  URL = {https://hal.inria.fr/inria-00112631},
  NOTE = {http://www.suvisoft.com},
  BOOKTITLE = {{Tenth International Workshop on Frontiers in Handwriting Recognition}},
  ADDRESS = {La Baule (France)},
  ORGANIZATION = {{Universit{\'e} de Rennes 1}},
  EDITOR = {Guy Lorette},
  PUBLISHER = {{Suvisoft}},
  YEAR = {2006},
  MONTH = Oct,
  KEYWORDS = {Convolutional neural networks ; BLAS ; GPU},
  PDF = {https://hal.inria.fr/inria-00112631/file/p1038112283956.pdf},
  HAL_ID = {inria-00112631},
  HAL_VERSION = {v1},
}

@article{apl-survey,
author = {Hui, Roger K. W. and Kromberg, Morten J.},
title = {APL since 1978},
year = {2020},
issue_date = {June 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {HOPL},
url = {https://doi.org/10.1145/3386319},
doi = {10.1145/3386319},
abstract = {The Evolution of APL, the HOPL I paper by Falkoff and Iverson on APL, recounted the fundamental design principles which shaped the implementation of the APL language in 1966, and the early uses and other influences which shaped its first decade of enhancements.In the 40 years that have elapsed since HOPL I, several dozen APL implementations have come and gone. In the first decade or two, interpreters were typically born and buried along with the hardware or operating system that they were created for. More recently, the use of C as an implementation language provided APL interpreters with greater longevity and portability.APL started its life on IBM mainframes which were time-shared by multiple users. As the demand for computing resources grew and costs dropped, APL first moved in-house to mainframes, then to mini- and micro-computers. Today, APL runs on PCs and tablets, Apples and Raspberry Pis, smartphones and watches.The operating systems, and the software application platforms that APL runs on, have evolved beyond recognition. Tools like database systems have taken over many of the tasks that were initially implemented in APL or provided by the APL system, and new capabilities like parallel hardware have also changed the focus of design and implementation efforts through the years.The first wave of significant language enhancements occurred shortly after HOPL I, resulting in so-called second-generation APL systems. The most important feature of the second generation is the addition of general arrays—in which any item of an array can be another array—and a number of new functions and operators aligned with, if not always motivated by, the new data structures.The majority of implementations followed IBM’s path with APL2 “floating” arrays; others aligned themselves with SHARP APL and “grounded” arrays. While the APL2 style of APL interpreters came to dominate the mainstream of the APL community, two new cousins of APL descended from the SHARP APL family tree: J (created by Iverson and Hui) and k (created by Arthur Whitney).We attempt to follow a reasonable number of threads through the last 40 years, to identify the most important factors that have shaped the evolution of APL. We will discuss the details of what we believe are the most significant language features that made it through the occasionally unnatural selection imposed by the loss of habitats that disappeared with hardware, software platforms, and business models.The history of APL now spans six decades. It is still the case, as Falkoff and Iverson remarked at the end of the HOPL I paper, that:Although this is not the place to discuss the future, it should be remarked that the evolution of APL is far from finished.},
journal = {Proc. ACM Program. Lang.},
month = jun,
articleno = {69},
numpages = {108},
keywords = {APL, executable mathematical notation, programming languages, array programming, higher-order functions, functional programming}
}

@article{keops,
  author  = {Benjamin Charlier and Jean Feydy and Joan Alexis Glaunès and François-David Collin and Ghislain Durif},
  title   = {Kernel Operations on the GPU, with Autodiff, without Memory Overflows},
  journal = {Journal of Machine Learning Research},
  year    = {2021},
  volume  = {22},
  number  = {74},
  pages   = {1-6},
  url     = {http://jmlr.org/papers/v22/20-275.html}
}

@article{phase-ordering,
author = {Whitfield, Deborah L. and Soffa, Mary Lou},
title = {An Approach for Exploring Code Improving Transformations},
year = {1997},
issue_date = {Nov. 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {6},
issn = {0164-0925},
url = {https://doi.org/10.1145/267959.267960},
doi = {10.1145/267959.267960},
abstract = {Although code transformations are routinely applied to improve the performance of programs for both scalar and parallel machines, the properties of code-improving transformations are not well understood. In this article we present a framework that enables the exploration, both analytically and experimentally, of properties of code-improving transformations. The major component of the framework is a specification language, Gospel, for expressing the conditions needed to safely apply a transformation and the actions required to change the code to implement the transformation. The framework includes a technique that facilitates an analytical investigation of code-improving transformations using the Gospel specifications. It also contains a tool, Genesis, that automatically produces a transformer that implements the transformations specified in Gospel. We demonstrate the usefulness of the framework by exploring the enabling and disabling properties of transformations. We first present analytical results on the enabling and disabling properties of a set of code transformations, including both traditional and parallelizing transformations, and then describe experimental results showing the types of transformations and the enabling and disabling interactions actually found in a set of programs.},
journal = {ACM Trans. Program. Lang. Syst.},
month = nov,
pages = {1053–1084},
numpages = {32},
keywords = {parallelizing transformations, automatic generation of optimizers, specification of program optimizations, enabling and disabling of optimizations, code-improving transformations}
}

@inproceedings{accelerate,
    author      = {Chakravarty, Manuel M T and Keller, Gabriele and Lee, Sean and McDonell, Trevor L. and Grover, Vinod},
    title       = {{Accelerating Haskell array codes with multicore GPUs}},
    booktitle   = {DAMP '11: The 6th workshop on Declarative Aspects of Multicore Programming},
    publisher   = {ACM},
    year        = {2011},
    month       = jan
}

@misc{hagedorn2020fireiron,
    title={Fireiron: A Scheduling Language for High-Performance Linear Algebra on GPUs},
    author={Bastian Hagedorn and Archibald Samuel Elliott and Henrik Barthels and Rastislav Bodik and Vinod Grover},
    year={2020},
    eprint={2003.06324},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@article{multidimensional-homomorphism,
author = {Rasch, Ari and Gorlatch, Sergei},
year = {2018},
month = {02},
pages = {1-19},
title = {Multi-dimensional Homomorphisms and Their Implementation in OpenCL},
volume = {46},
journal = {International Journal of Parallel Programming},
doi = {10.1007/s10766-017-0508-z}
}

@book{surveillance,
author = {Zuboff, Shoshana},
title = {The Age of Surveillance Capitalism: The Fight for a Human Future at the New Frontier of Power},
year = {2018},
isbn = {1610395697},
edition = {1st}
}

@misc{qin2020bitcoins,
    title={Bitcoin's future carbon footprint},
    author={Shize Qin and Lena Klaaßen and Ulrich Gallersdörfer and Christian Stoll and Da Zhang},
    year={2020},
    eprint={2011.02612},
    archivePrefix={arXiv},
    primaryClass={econ.GN}
}

@inproceedings{chen2016eyeriss,
    author      = {{Chen, Yu-Hsin and Krishna, Tushar and Emer, Joel and Sze, Vivienne}},
    title       = {{Eyeriss: An Energy-Efficient Reconfigurable Accelerator for Deep Convolutional Neural Networks}},
    booktitle   = {{IEEE International Solid-State Circuits Conference, ISSCC 2016, Digest of Technical Papers}},
    year        = {{2016}},
    pages       = {{262-263}},
}

@ARTICLE{moreau2018vta,
author={T. {Moreau} and T. {Chen} and L. {Vega} and J. {Roesch} and L. {Zheng} and E. {Yan} and J. {Fromm} and Z. {Jiang} and L. {Ceze} and C. {Guestrin} and A. {Krishnamurthy}},
journal={IEEE Micro},
title={A Hardware-Software Blueprint for Flexible Deep Learning Specialization},
year={2019},
volume={},
number={},
pages={1-1},
keywords={},
doi={10.1109/MM.2019.2928962},
ISSN={0272-1732},
month={},
}

@article{senanayake2020,
  title={A Sparse Iteration Space Transformation Framework for Sparse Tensor Algebra},
  author={Ryan Senanayake and Changwan Hong and Ziheng Wang and Amalee Wilson and Stephen Chou and Shoaib Kamil and Saman Amarasinghe and Fredrik Kjolstad},
  journal={Proceedings of the ACM on Programming Languages},
  volume={4},
  issue={OOPSLA},
  year={2020},
  month={November}
}

@misc{tian2021highperformance,
    title={A High-Performance Sparse Tensor Algebra Compiler in Multi-Level IR},
    author={Ruiqin Tian and Luanzheng Guo and Jiajia Li and Bin Ren and Gokcen Kestor},
    year={2021},
    eprint={2102.05187},
    archivePrefix={arXiv},
    primaryClass={cs.DC}
}

@misc{chetlur2014cudnn,
    title={cuDNN: Efficient Primitives for Deep Learning},
    author={Sharan Chetlur and Cliff Woolley and Philippe Vandermersch and Jonathan Cohen and John Tran and Bryan Catanzaro and Evan Shelhamer},
    year={2014},
    eprint={1410.0759},
    archivePrefix={arXiv},
    primaryClass={cs.NE}
}

@article{markidis2018tensorcore,
   title={NVIDIA Tensor Core Programmability, Performance \& Precision},
   ISBN={9781538655559},
   url={http://dx.doi.org/10.1109/IPDPSW.2018.00091},
   DOI={10.1109/ipdpsw.2018.00091},
   journal={2018 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)},
   publisher={IEEE},
   author={Markidis, Stefano and Chien, Steven Wei Der and Laure, Erwin and Peng, Ivy Bo and Vetter, Jeffrey S.},
   year={2018},
   month={May}
}

@phdthesis{jia2014semantic,
    Author = {Jia, Yangqing},
    Title = {Learning Semantic Image Representations at a Large Scale},
    School = {EECS Department, University of California, Berkeley},
    Year = {2014},
    Month = {May},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2014/EECS-2014-93.html},
    Number = {UCB/EECS-2014-93},
    Abstract = {I present my work towards learning a better computer vision system that learns and generalizes object categories better, and behaves in ways closer to what human behave. Specifically, I focus on two key components of such a system: learning better features, and revisiting existing problem statements. For the first component, I propose and analyze novel receptive field learning and dictionary learning methods, mathematically justified by the Nystrom sampling theory, that learn more compact and effective features for object recognition tasks. For the second component, I propose to combine otherwise independently developed computer vision and cognitive science studies, and present the first large-scale system that allows computers to learn and generalize closer to what a human learner will do. I also provide a large-scale human behavior database, which will hopefully enable further research along this research direction.

Following the recent success of convolutional neural networks, I present and release a well-engineered framework for general deep learning research, and provide an extensive analysis on the generality of deep features learned from the state-of-the-art CNN pipeline: whether they serve as a general-purpose visual descriptor that could be adopted in various applications, and future research directions made possible by such general features.}
}

@inproceedings{chen2018autotvm,
  author    = {Chen, Tianqi and Zheng, Lianmin and Yan, Eddie and Jiang, Ziheng and Moreau, Thierry and Ceze, Luis and Guestrin, Carlos and Krishnamurthy, Arvind},
  title     = {Learning to Optimize Tensor Programs},
  year      = {2018},
  booktitle = {Proceedings of the 32nd International Conference on Neural Information Processing Systems},
  pages     = {3393–3404},
  numpages  = {12},
  series    = {NIPS'18},
  location  = {Carlsbad, CA, USA},
  publisher = {USENIX Association},
  address   = {USA}
}

@misc{nvdla,
  author       = {Nvidia},
  title        = {The NVIDIA Deep Learning Accelerator (NVDLA)},
  howpublished = {\url{http://nvdla.org/}},
  year         = {2018},
}

@inproceedings{zheng2020ansor,
  author    = {Lianmin Zheng and Chengfan Jia and Minmin Sun and Zhao Wu and Cody Hao Yu and Ameer Haj-Ali and Yida Wang and Jun Yang and Danyang Zhuo and Koushik Sen and Joseph E. Gonzalez and Ion Stoica},
  title     = {Ansor: Generating High-Performance Tensor Programs for Deep Learning},
  booktitle = {14th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 20)},
  year      = {2020},
  isbn      = {978-1-939133-19-9},
  pages     = {863--879},
  url       = {https://www.usenix.org/conference/osdi20/presentation/zheng},
  publisher = {{USENIX} Association},
  month     = nov,
  address   = {Banff, Canada}
}

@misc{anderson2020learning,
    title={Learning to Schedule Halide Pipelines for the GPU},
    author={Luke Anderson and Andrew Adams and Karima Ma and Tzu-Mao Li and Jonathan Ragan-Kelley},
    year={2020},
    eprint={2012.07145},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@inproceedings{garavel2018rewrite-context,
  TITLE = {{Benchmarking Implementations of Term Rewriting and Pattern Matching in Algebraic, Functional, and Object-Oriented Languages - The 4th Rewrite Engines Competition}},
  AUTHOR = {Garavel, Hubert and Tabikh, Mohammad-Ali and Arrada, Imad-Seddik},
  URL = {https://hal.inria.fr/hal-01883212},
  BOOKTITLE = {{Proceedings of the 12th International Workshop on Rewriting Logic and its Applications (WRLA'18)}},
  ADDRESS = {Thessaloniki, Greece},
  YEAR = {2018},
  KEYWORDS = {term rewrite engine ; term rewrite system ; specification language ; programming language ; abstract data type ; algebraic specification ; compiler ; functional programming ; interpreter ; object-oriented programming},
  PDF = {https://hal.inria.fr/hal-01883212/file/Garavel-Tabikh-Arrada-18.pdf},
  HAL_ID = {hal-01883212},
  HAL_VERSION = {v1},
}

@inproceedings{tate2009equality,
  author    = {Tate, Ross and Stepp, Michael and Tatlock, Zachary and Lerner, Sorin},
  title     = {Equality Saturation: A New Approach to Optimization},
  year      = {2009},
  isbn      = {9781605583792},
  url       = {https://doi.org/10.1145/1480881.1480915},
  doi       = {10.1145/1480881.1480915},
  booktitle = {Proceedings of the 36th Annual ACM Symposium on Principles of Programming Languages},
  pages     = {264–276},
  numpages  = {13},
  series    = {POPL '09}
}

@inproceedings{abadi2016tensorflow,
  author    = {Abadi, Mart\'{\i}n and Barham, Paul and Chen, Jianmin and Chen, Zhifeng and Davis, Andy and Dean, Jeffrey and Devin, Matthieu and Ghemawat, Sanjay and Irving, Geoffrey and Isard, Michael and Kudlur, Manjunath and Levenberg, Josh and Monga, Rajat and Moore, Sherry and Murray, Derek G. and Steiner, Benoit and Tucker, Paul and Vasudevan, Vijay and Warden, Pete and Wicke, Martin and Yu, Yuan and Zheng, Xiaoqiang},
  title     = {TensorFlow: A System for Large-Scale Machine Learning},
  year      = {2016},
  isbn      = {9781931971331},
  publisher = {USENIX Association},
  address   = {USA},
  booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
  pages     = {265–283},
  numpages  = {19},
  location  = {Savannah, GA, USA},
  series    = {OSDI '16},
  url       = {https://www.usenix.org/conference/osdi16/technical-sessions/presentation/abadi}
}

@inproceedings{alur2013syntax,
  author    = {Rajeev Alur and
               Rastislav Bod{\'{\i}}k and
               Garvit Juniwal and
               Milo M. K. Martin and
               Mukund Raghothaman and
               Sanjit A. Seshia and
               Rishabh Singh and
               Armando Solar{-}Lezama and
               Emina Torlak and
               Abhishek Udupa},
  title     = {Syntax-Guided Synthesis},
  booktitle = {Proceedings of the Conference on Formal Methods in Computer-Aided Design},
  series    = {FMCAD '13},
  pages     = {1--8},
  publisher = {{IEEE}},
  year      = {2013},
  location  = {Portland, OR, USA},
  address   = {New York, NY, USA},
  doi       = {10.1109/FMCAD.2013.6679385},
  isbn      = {9780983567837},
  url       = {http://ieeexplore.ieee.org/document/6679385/}
}

@online{apache2020patternlang,
  key          = {ApacheRelayPattern},
  year         = {2020},
  title        = {Pattern Matching in Relay},
  organization = {Apache Foundation},
  url          = {https://tvm.apache.org/docs/langref/relay_pattern.html},
  lastaccessed = {Apr. 20, 2021}
}

@book{baader1999term,
  author    = {Baader, Franz and Nipkow, Tobias},
  title     = {Term Rewriting and All That},
  year      = {1998},
  isbn      = {0521455200},
  publisher = {Cambridge University Press},
  address   = {USA}
}

@inproceedings{bahr2020creating,
  author    = {Bahr, Rick and Barrett, Clark and Bhagdikar, Nikhil and Carsello, Alex and Daly, Ross and Donovick, Caleb and Durst, David and Fatahalian, Kayvon and Feng, Kathleen and Hanrahan, Pat and Hofstee, Teguh and Horowitz, Mark and Huff, Dillon and Kjolstad, Fredrik and Kong, Taeyoung and Liu, Qiaoyi and Mann, Makai and Melchert, Jackson and Nayak, Ankita and Niemetz, Aina and Nyengele, Gedeon and Raina, Priyanka and Richardson, Stephen and Setaluri, Raj and Setter, Jeff and Sreedhar, Kavya and Strange, Maxwell and Thomas, James and Torng, Christopher and Truong, Leonard and Tsiskaridze, Nestan and Zhang, Keyi},
  title     = {Creating an Agile Hardware Design Flow},
  year      = {2020},
  isbn      = {9781450367257},
  publisher = {IEEE Press},
  booktitle = {Proceedings of the 57th ACM/EDAC/IEEE Design Automation Conference},
  articleno = {142},
  numpages  = {6},
  location  = {Virtual Event, USA},
  series    = {DAC '20},
  address   = {New York, NY, USA},
  doi       = {10.1109/DAC18072.2020.9218553}
}

@inproceedings{bansal2006automatic,
  author    = {Bansal, Sorav and Aiken, Alex},
  title     = {Automatic Generation of Peephole Superoptimizers},
  year      = {2006},
  isbn      = {1595934510},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1168857.1168906},
  doi       = {10.1145/1168857.1168906},
  booktitle = {Proceedings of the 12th International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages     = {394–403},
  numpages  = {10},
  location  = {San Jose, California, USA},
  series    = {ASPLOS XII}
}

@article{biere2003bounded,
  author  = {Armin Biere and
             Alessandro Cimatti and
             Edmund M. Clarke and
             Ofer Strichman and
             Yunshan Zhu},
  title   = {Bounded model checking},
  journal = {Adv. Comput.},
  volume  = {58},
  pages   = {117--148},
  year    = {2003},
  url     = {https://doi.org/10.1016/S0065-2458(03)58003-2},
  doi     = {10.1016/S0065-2458(03)58003-2}
}

@book{blindell2016instruction,
  author    = {Gabriel Hjort Blindell},
  title     = {Instruction Selection - Principles, Methods, and Applications},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2016},
  url       = {https://doi.org/10.1007/978-3-319-34019-7},
  doi       = {10.1007/978-3-319-34019-7},
  isbn      = {978-3-319-34017-3}
}

@inproceedings{botalb2018contrasting,
  author    = {Botalb, Abdelaziz and Moinuddin, M and Al-Saggaf, UM and Ali, Syed SA},
  title     = {Contrasting Convolutional Neural Network (CNN) with Multi-Layer Perceptron (MLP) for Big Data Analysis},
  booktitle = {Proceedings of the 2018 International conference on intelligent and advanced system},
  series    = {ICIAS '18},
  pages     = {1--5},
  year      = {2018},
  publisher = {IEEE},
  address   = {Kuala Lumpur, Malaysia},
  doi       = {10.1109/ICIAS.2018.8540626}
}

@inproceedings{burch1994automatic,
  author    = {Burch, Jerry R. and Dill, David L.},
  title     = {Automatic Verification of Pipelined Microprocessor Control},
  year      = {1994},
  isbn      = {3540581790},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  booktitle = {Proceedings of the 6th International Conference on Computer Aided Verification},
  pages     = {68–80},
  numpages  = {13},
  series    = {CAV '94},
  url       = {https://dl.acm.org/citation.cfm?id=735662}
}

@article{canis2013legup,
  author     = {Canis, Andrew and Choi, Jongsok and Aldham, Mark and Zhang, Victor and Kammoona, Ahmed and Czajkowski, Tomasz and Brown, Stephen D. and Anderson, Jason H.},
  title      = {LegUp: An Open-Source High-Level Synthesis Tool for FPGA-Based Processor/Accelerator Systems},
  year       = {2013},
  issue_date = {September 2013},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {13},
  number     = {2},
  issn       = {1539-9087},
  url        = {https://doi.org/10.1145/2514740},
  doi        = {10.1145/2514740},
  journal    = {ACM Trans. Embed. Comput. Syst.},
  month      = sep,
  articleno  = {24},
  numpages   = {27}
}

@inproceedings{cao202065nm,
  author    = {Ningyuan Cao and
               Baibhab Chatterjee and
               Minxiang Gong and
               Muya Chang and
               Shreyas Sen and
               Arijit Raychowdhury},
  title     = {A 65nm Image Processing SoC Supporting Multiple {DNN} Models and Real-Time Computation-Communication Trade-Off Via Actor-Critical Neuro-Controller},
  booktitle = {Proceedings of the 2020 IEEE Symposium on VLSI Circuits},
  location  = {Honolulu, HI, USA},
  pages     = {1--2},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2020},
  url       = {https://doi.org/10.1109/VLSICircuits18222.2020.9162878},
  doi       = {10.1109/VLSICircuits18222.2020.9162878}
}

@online{catapult,
  key          = {Catapult},
  year         = {n.\,d.},
  title        = {High-Level Synthesis \& Verification},
  organization = {Siemens},
  url          = {https://eda.sw.siemens.com/en-US/ic/ic-design/high-level-synthesis-and-verification-platform/},
  lastaccessed = {Nov. 15, 2021}
}

@inproceedings{caulfield2016cloud,
  author    = {Caulfield, Adrian M. and Chung, Eric S. and Putnam, Andrew and Angepat, Hari and Fowers, Jeremy and Haselman, Michael and Heil, Stephen and Humphrey, Matt and Kaur, Puneet and Kim, Joo-Young and Lo, Daniel and Massengill, Todd and Ovtcharov, Kalin and Papamichael, Michael and Woods, Lisa and Lanka, Sitaram and Chiou, Derek and Burger, Doug},
  title     = {A Cloud-Scale Acceleration Architecture},
  year      = {2016},
  publisher = {IEEE Press},
  booktitle = {Proceedings of the 49th Annual IEEE/ACM International Symposium on Microarchitecture},
  articleno = {7},
  numpages  = {13},
  location  = {Taipei, Taiwan},
  address   = {New York, NY, USA},
  series    = {MICRO-49},
  doi       = {10.1109/MICRO.2016.7783710}
}

@online{cfuplayground,
  key          = {CFUPlay},
  organization = {Google LLC},
  title        = {The CFU Playground: Accelerate ML models on FPGAs},
  url          = {https://cfu-playground.readthedocs.io},
  year         = {n.\,d.},
  lastaccessed = {Oct. 9, 2021}
}

@inproceedings{chan2014itrs,
  author    = {Wei-Ting Jonas Chan and
               Andrew B. Kahng and
               Siddhartha Nath and
               Ichiro Yamamoto},
  title     = {The ITRS MPU and SOC system drivers: Calibration and implications for design-based equivalent scaling in the roadmap},
  booktitle = {Proceedings of the 32nd {IEEE} International Conference on Computer Design},
  pages     = {153--160},
  publisher = {{IEEE} Computer Society},
  year      = {2014},
  location  = {Seoul, South Korea},
  address   = {New York, NY, USA},
  series    = {ICCD '14},
  url       = {https://doi.org/10.1109/ICCD.2014.6974675},
  doi       = {10.1109/ICCD.2014.6974675}
}

@inproceedings{chellapilla2006high,
  title       = {High Performance Convolutional Neural Networks for Document Processing},
  author      = {Chellapilla, Kumar and Puri, Sidd and Simard, Patrice},
  booktitle   = {Proceedings of the Tenth International Workshop on Frontiers in Handwriting Recognition},
  address     = {La Baule (France)},
  publisher   = {Universit{\'e} de Rennes 1},
  editor      = {Guy Lorette},
  year        = {2006},
  month       = Oct,
  url         = {https://hal.inria.fr/inria-00112631},
  hal_id      = {inria-00112631},
  hal_version = {v1},
  numpages    = {6}
}

@misc{chen2015mxnet,
  title         = {Mxnet: A flexible and efficient machine learning library for heterogeneous distributed systems},
  author        = {Chen, Tianqi and Li, Mu and Li, Yutian and Lin, Min and Wang, Naiyan and Wang, Minjie and Xiao, Tianjun and Xu, Bing and Zhang, Chiyuan and Zhang, Zheng},
  year          = {2015},
  eprint        = {1512.01274},
  archiveprefix = {arXiv},
  primaryclass  = {cs.DC}
}


}

@misc{chen2021byoc,
  title         = {Bring Your Own Codegen to Deep Learning Compiler},
  author        = {Zhi Chen and Cody Hao Yu and Trevor Morris and Jorn Tuyls and Yi-Hsiang Lai and Jared Roesch and Elliott Delaye and Vin Sharma and Yida Wang},
  year          = {2021},
  eprint        = {2105.03215},
  archiveprefix = {arXiv},
  primaryclass  = {cs.LG}
}

@article{choi2017kami,
  author     = {Choi, Joonwon and Vijayaraghavan, Muralidaran and Sherman, Benjamin and Chlipala, Adam and Arvind},
  title      = {Kami: A Platform for High-Level Parametric Hardware Specification and Its Modular Verification},
  year       = {2017},
  issue_date = {September 2017},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {1},
  number     = {ICFP},
  url        = {https://doi.org/10.1145/3110268},
  doi        = {10.1145/3110268},
  journal    = {Proc. ACM Program. Lang.},
  month      = aug,
  articleno  = {24},
  numpages   = {30}
}

@phdthesis{chong2014scalable,
  author  = {Nathan Chong},
  title   = {Scalable verification techniques for data-parallel programs},
  school  = {Imperial College London},
  year    = {2014},
  address = {UK},
  url     = {http://hdl.handle.net/10044/1/24437}
}

@inproceedings{churchill2019semantic,
  author    = {Churchill, Berkeley and Padon, Oded and Sharma, Rahul and Aiken, Alex},
  title     = {Semantic Program Alignment for Equivalence Checking},
  year      = {2019},
  isbn      = {9781450367127},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3314221.3314596},
  doi       = {10.1145/3314221.3314596},
  booktitle = {Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages     = {1027–1040},
  numpages  = {14},
  location  = {Phoenix, AZ, USA},
  series    = {PLDI '19}
}

@online{cifar10,
  key          = {CIFAR},
  year         = {2009},
  title        = {The CIFAR-10 dataset},
  organization = {Canadian Institute for Advanced Research},
  url          = {http://www.cs.toronto.edu/~kriz/cifar.html},
  lastaccessed = {Nov. 15, 2021}
}

@inproceedings{clarke2004tool,
  author    = {Edmund M. Clarke and
               Daniel Kroening and
               Flavio Lerda},
  editor    = {Kurt Jensen and
               Andreas Podelski},
  title     = {A Tool for Checking ANSI-C Programs},
  booktitle = {Proceedings of the 10th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2004)},
  location  = {Barcelona, Spain},
  series    = {Lecture Notes in Computer Science},
  volume    = {2988},
  pages     = {168--176},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2004},
  url       = {https://doi.org/10.1007/978-3-540-24730-2\_15},
  doi       = {10.1007/978-3-540-24730-2\_15}
}

@inproceedings{cong2012architecture,
  author    = {Cong, Jason and Ghodrat, Mohammad Ali and Gill, Michael and Grigorian, Beayna and Reinman, Glenn},
  title     = {Architecture Support for Accelerator-Rich CMPs},
  year      = {2012},
  isbn      = {9781450311991},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2228360.2228512},
  doi       = {10.1145/2228360.2228512},
  booktitle = {Proceedings of the 49th Annual Design Automation Conference},
  pages     = {843–849},
  numpages  = {7},
  location  = {San Francisco, California},
  series    = {DAC '12}
}

@inproceedings{cong2014accelerator,
  author    = {Cong, Jason and Ghodrat, Mohammad Ali and Gill, Michael and Grigorian, Beayna and Gururaj, Karthik and Reinman, Glenn},
  title     = {Accelerator-Rich Architectures: Opportunities and Progresses},
  year      = {2014},
  isbn      = {9781450327305},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2593069.2596667},
  doi       = {10.1145/2593069.2596667},
  booktitle = {Proceedings of the 51st Annual Design Automation Conference},
  pages     = {1–6},
  numpages  = {6},
  location  = {San Francisco, CA, USA},
  series    = {DAC '14}
}

@inproceedings{de2008z3,
  author    = {Leonardo Mendon{\c{c}}a de Moura and
               Nikolaj Bj{\o}rner},
  editor    = {C. R. Ramakrishnan and
               Jakob Rehof},
  title     = {Z3: An Efficient SMT Solver},
  booktitle = {Proceedings of the 14th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2008)},
  location  = {Budapest, Hungary},
  series    = {Lecture Notes in Computer Science},
  volume    = {4963},
  pages     = {337--340},
  publisher = {Springer},
  year      = {2008},
  url       = {https://doi.org/10.1007/978-3-540-78800-3\_24},
  doi       = {10.1007/978-3-540-78800-3\_24},
  address   = {Berlin,  Heidelberg}
}

@article{de2011satisfiability,
  author     = {De Moura, Leonardo and Bj\o{}rner, Nikolaj},
  title      = {Satisfiability modulo Theories: Introduction and Applications},
  year       = {2011},
  issue_date = {September 2011},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {54},
  number     = {9},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/1995376.1995394},
  doi        = {10.1145/1995376.1995394},
  journal    = {Commun. ACM},
  month      = sep,
  pages      = {69–77},
  numpages   = {9}
}

@inproceedings{deng2009imagenet,
  author    = {Jia Deng and
               Wei Dong and
               Richard Socher and
               Li-Jia Li and
               Kai Li and
               Fei-Fei Li},
  title     = {ImageNet: A large-scale hierarchical image database},
  booktitle = {Proceedings of the 2009 IEEE Computer Society Conference on Computer Vision and Pattern Recognition},
  pages     = {248--255},
  year      = {2009},
  url       = {https://doi.org/10.1109/CVPR.2009.5206848},
  doi       = {10.1109/CVPR.2009.5206848},
  location  = {Miami, FL, USA},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  series    = {CVPR '09}
}

@inproceedings{dershowitz1993taste,
  author    = {Nachum Dershowitz},
  editor    = {Peter E. Lauer},
  title     = {A Taste of Rewrite Systems},
  booktitle = {Functional Programming, Concurrency, Simulation and Automated Reasoning},
  series    = {Lecture Notes in Computer Science},
  volume    = {693},
  pages     = {199--228},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {1993},
  url       = {https://doi.org/10.1007/3-540-56883-2\_11},
  doi       = {10.1007/3-540-56883-2\_11}
}

@inproceedings{devlin2018bert,
  title     = {BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding},
  author    = {Devlin, Jacob and
               Chang, Ming-Wei and
               Lee, Kenton and
               Toutanova, Kristina},
  booktitle = {Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers)},
  series    = {NAACL-HLT},
  month     = jun,
  year      = {2019},
  address   = {Minneapolis, Minnesota},
  publisher = {Association for Computational Linguistics},
  url       = {https://aclanthology.org/N19-1423},
  doi       = {10.18653/v1/N19-1423},
  pages     = {4171--4186}
}


@inproceedings{dias2010automatically,
  author    = {Dias, Jo\~{a}o and Ramsey, Norman},
  title     = {Automatically Generating Instruction Selectors Using Declarative Machine Descriptions},
  year      = {2010},
  isbn      = {9781605584799},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1706299.1706346},
  doi       = {10.1145/1706299.1706346},
  booktitle = {Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {403–416},
  numpages  = {14},
  location  = {Madrid, Spain},
  series    = {POPL '10}
}

@inproceedings{esmaeilzadeh2011dark,
  author    = {Esmaeilzadeh, Hadi and Blem, Emily and St. Amant, Renee and Sankaralingam, Karthikeyan and Burger, Doug},
  title     = {Dark Silicon and the End of Multicore Scaling},
  year      = {2011},
  isbn      = {9781450304726},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2000064.2000108},
  doi       = {10.1145/2000064.2000108},
  booktitle = {Proceedings of the 38th Annual International Symposium on Computer Architecture},
  pages     = {365–376},
  numpages  = {12},
  location  = {San Jose, California, USA},
  series    = {ISCA '11}
}

@inproceedings{fang2019understanding,
  author    = {Zhenman Fang and
               Farnoosh Javadi and
               Jason Cong and
               Glenn Reinman},
  title     = {Understanding Performance Gains of Accelerator-Rich Architectures},
  booktitle = {Proceedings of the 30th IEEE International Conference on Application-specific Systems, Architectures and Processors},
  series    = {ASAP '19},
  pages     = {239--246},
  publisher = {IEEE},
  location  = {New York, NY, USA},
  address   = {New York, NY, USA},
  year      = {2019},
  url       = {https://doi.org/10.1109/ASAP.2019.00013},
  doi       = {10.1109/ASAP.2019.00013}
}

@inproceedings{fowers2018configurable,
  author    = {Fowers, Jeremy and Ovtcharov, Kalin and Papamichael, Michael and Massengill, Todd and Liu, Ming and Lo, Daniel and Alkalay, Shlomi and Haselman, Michael and Adams, Logan and Ghandi, Mahdi and Heil, Stephen and Patel, Prerak and Sapek, Adam and Weisz, Gabriel and Woods, Lisa and Lanka, Sitaram and Reinhardt, Steven K. and Caulfield, Adrian M. and Chung, Eric S. and Burger, Doug},
  title     = {A Configurable Cloud-Scale DNN Processor for Real-Time AI},
  year      = {2018},
  isbn      = {9781538659847},
  publisher = {IEEE Press},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1109/ISCA.2018.00012},
  doi       = {10.1109/ISCA.2018.00012},
  booktitle = {Proceedings of the 45th Annual International Symposium on Computer Architecture},
  pages     = {1–14},
  numpages  = {14},
  location  = {Los Angeles, California},
  series    = {ISCA '18}
}

@inproceedings{fujii2018new,
  author    = {Taro Fujii and
               Takao Toi and
               Teruhito Tanaka and
               Katsumi Togawa and
               Toshiro Kitaoka and
               Kengo Nishino and
               Noritsugu Nakamura and
               Hiroki Nakahara and
               Masato Motomura},
  title     = {New Generation Dynamically Reconfigurable Processor Technology for Accelerating Embedded AI Applications},
  booktitle = {Proceedings of the 2018 IEEE Symposium on VLSI Circuits},
  location  = {Honolulu, HI, USA},
  pages     = {41--42},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2018},
  url       = {https://doi.org/10.1109/VLSIC.2018.8502438},
  doi       = {10.1109/VLSIC.2018.8502438}
}

@inproceedings{garofalo20211,
  author    = {Angelo Garofalo and
               Gianmarco Ottavi and
               Alfio Di Mauro and
               Francesco Conti and
               Giuseppe Tagliavini and
               Luca Benini and
               Davide Rossi},
  title     = {A 1.15 TOPS/W, 16-Cores Parallel Ultra-Low Power Cluster with 2b-to-32b Fully Flexible Bit-Precision and Vector Lockstep Execution Mode},
  booktitle = {Proceedings of the 47th European Solid State Circuits Conference},
  series    = {ESSCIR 2021},
  location  = {Grenoble, France},
  pages     = {267--270},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2021},
  url       = {https://doi.org/10.1109/ESSCIRC53450.2021.9567767},
  doi       = {10.1109/ESSCIRC53450.2021.9567767}
}

@inproceedings{giordano2021chimera,
  author    = {Massimo Giordano and
               Kartik Prabhu and
               Kalhan Koul and
               Robert Radway and
               Albert Gural and
               Rohan Doshi and
               Zainab F. Khan and
               John W. Kustin and
               Timothy Liu and
               Gregorio B. Lopes and
               Victor Turbiner and
               Win{-}San Khwa and
               Yu{-}Der Chih and
               Meng{-}Fan Chang and
               Gu{\'{e}}nol{\'{e}} Lallement and
               Boris Murmann and
               Subhasish Mitra and
               Priyanka Raina},
  title     = {CHIMERA: A 0.92 TOPS, 2.2 TOPS/W Edge AI Accelerator with 2 MByte On-Chip Foundry Resistive RAM for Efficient Training and Inference},
  booktitle = {Proceedings of the 2021 Symposium on VLSI Circuits},
  location  = {Kyoto, Japan},
  pages     = {1--2},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2021},
  url       = {https://doi.org/10.23919/VLSICircuits52068.2021.9492347},
  doi       = {10.23919/VLSICircuits52068.2021.9492347}
}

@inproceedings{graves2014towards,
  title     = {Towards End-To-End Speech Recognition with Recurrent Neural Networks},
  author    = {Graves, Alex and Jaitly, Navdeep},
  booktitle = {Proceedings of the 31st International Conference on Machine Learning},
  pages     = {1764--1772},
  year      = {2014},
  editor    = {Xing, Eric P. and Jebara, Tony},
  volume    = {32},
  series    = {Proceedings of Machine Learning Research},
  address   = {Bejing, China},
  month     = {22--24 Jun},
  publisher = {PMLR},
  url       = {https://proceedings.mlr.press/v32/graves14.html}
}

@inproceedings{gurfinkel2015seahorn,
  author    = {Arie Gurfinkel and
               Temesghen Kahsai and
               Anvesh Komuravelli and
               Jorge A. Navas},
  editor    = {Daniel Kroening and
               Corina S. Pasareanu},
  title     = {The SeaHorn Verification Framework},
  booktitle = {Proceedings of the 27th International Conference on Computer Aided Verification (CAV 2015)},
  location  = {San Francisco, CA, USA},
  series    = {Lecture Notes in Computer Science},
  volume    = {9206},
  pages     = {343--361},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2015},
  url       = {https://doi.org/10.1007/978-3-319-21690-4\_20},
  doi       = {10.1007/978-3-319-21690-4\_20}
}

@inproceedings{ham2016graphicionado,
  author    = {Ham, Tae Jun and Wu, Lisa and Sundaram, Narayanan and Satish, Nadathur and Martonosi, Margaret},
  title     = {Graphicionado: A High-Performance and Energy-Efficient Accelerator for Graph Analytics},
  year      = {2016},
  publisher = {IEEE Press},
  address   = {New York, NY, USA},
  booktitle = {Proceedings of the 49th Annual IEEE/ACM International Symposium on Microarchitecture},
  articleno = {56},
  numpages  = {13},
  location  = {Taipei, Taiwan},
  series    = {MICRO-49}
}

@inproceedings{hameed2010understanding,
  author    = {Hameed, Rehan and Qadeer, Wajahat and Wachs, Megan and Azizi, Omid and Solomatnikov, Alex and Lee, Benjamin C. and Richardson, Stephen and Kozyrakis, Christos and Horowitz, Mark},
  title     = {Understanding Sources of Inefficiency in General-Purpose Chips},
  year      = {2010},
  isbn      = {9781450300537},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1815961.1815968},
  doi       = {10.1145/1815961.1815968},
  booktitle = {Proceedings of the 37th Annual International Symposium on Computer Architecture},
  pages     = {37–47},
  numpages  = {11},
  location  = {Saint-Malo, France},
  series    = {ISCA '10}
}

@inproceedings{han2016eie,
  author    = {Han, Song and Liu, Xingyu and Mao, Huizi and Pu, Jing and Pedram, Ardavan and Horowitz, Mark A. and Dally, William J.},
  title     = {EIE: Efficient Inference Engine on Compressed Deep Neural Network},
  year      = {2016},
  isbn      = {9781467389471},
  publisher = {IEEE Press},
  url       = {https://doi.org/10.1109/ISCA.2016.30},
  doi       = {10.1109/ISCA.2016.30},
  booktitle = {Proceedings of the 43rd International Symposium on Computer Architecture},
  pages     = {243–254},
  numpages  = {12},
  location  = {Seoul, Republic of Korea},
  address   = {New York, NY, USA},
  series    = {ISCA '16}
}

@inproceedings{he2016deep,
  author    = {Kaiming He and
               Xiangyu Zhang and
               Shaoqing Ren and
               Jian Sun},
  title     = {Deep Residual Learning for Image Recognition},
  booktitle = {Proceedings of the 2016 IEEE Conference on Computer Vision and Pattern Recognition},
  series    = {CVPR},
  location  = {Las Vegas, NV, USA},
  pages     = {770--778},
  publisher = {IEEE Computer Society},
  address   = {New York, NY, USA},
  year      = {2016},
  url       = {https://doi.org/10.1109/CVPR.2016.90},
  doi       = {10.1109/CVPR.2016.90}
}

@article{hegarty2014darkroom,
  author     = {Hegarty, James and Brunhaver, John and DeVito, Zachary and Ragan-Kelley, Jonathan and Cohen, Noy and Bell, Steven and Vasilyev, Artem and Horowitz, Mark and Hanrahan, Pat},
  title      = {Darkroom: Compiling High-Level Image Processing Code into Hardware Pipelines},
  year       = {2014},
  issue_date = {July 2014},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {33},
  number     = {4},
  issn       = {0730-0301},
  url        = {https://doi.org/10.1145/2601097.2601174},
  doi        = {10.1145/2601097.2601174},
  journal    = {ACM Trans. Graph.},
  month      = jul,
  articleno  = {144},
  numpages   = {11}
}

@article{hochreiter1997lstm,
  author     = {Hochreiter, Sepp and Schmidhuber, J\"{u}rgen},
  title      = {Long Short-Term Memory},
  year       = {1997},
  issue_date = {November 15, 1997},
  publisher  = {MIT Press},
  address    = {Cambridge, MA, USA},
  volume     = {9},
  number     = {8},
  issn       = {0899-7667},
  url        = {https://doi.org/10.1162/neco.1997.9.8.1735},
  doi        = {10.1162/neco.1997.9.8.1735},
  journal    = {Neural Comput.},
  month      = nov,
  pages      = {1735–1780},
  numpages   = {46}
}

@misc{howard2017mobilenets,
  author        = {Andrew G. Howard and
                   Menglong Zhu and
                   Bo Chen and
                   Dmitry Kalenichenko and
                   Weijun Wang and
                   Tobias Weyand and
                   Marco Andreetto and
                   Hartwig Adam},
  title         = {MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications},
  year          = {2017},
  url           = {http://arxiv.org/abs/1704.04861},
  eprint        = {1704.04861},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CV}
}

@inproceedings{huang2018formal,
  title     = {Formal Security Verification of Concurrent Firmware in SoCs Using Instruction-Level Abstraction for Hardware},
  author    = {Huang, Bo-Yuan and Ray, Sayak and Gupta, Aarti and Fung, Jason M. and Malik, Sharad},
  year      = {2018},
  isbn      = {9781450357005},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3195970.3196055},
  doi       = {10.1145/3195970.3196055},
  booktitle = {Proceedings of the 55th Annual Design Automation Conference},
  articleno = {91},
  numpages  = {6},
  location  = {San Francisco, California},
  series    = {DAC '18}
}

@article{huang2018instruction,
  author     = {Huang, Bo-Yuan and Zhang, Hongce and Subramanyan, Pramod and Vizel, Yakir and Gupta, Aarti and Malik, Sharad},
  title      = {Instruction-Level Abstraction (ILA): A Uniform Specification for System-on-Chip (SoC) Verification},
  year       = {2018},
  issue_date = {January 2019},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {24},
  number     = {1},
  issn       = {1084-4309},
  url        = {https://doi.org/10.1145/3282444},
  doi        = {10.1145/3282444},
  journal    = {ACM Trans. Des. Autom. Electron. Syst.},
  month      = dec,
  articleno  = {10},
  numpages   = {24}
}

@inproceedings{huang2019ilang,
  author    = {Bo-Yuan Huang and
               Hongce Zhang and
               Aarti Gupta and
               Sharad Malik},
  editor    = {Tom{\'{a}}s Vojnar and Lijun Zhang},
  title     = {ILAng: A Modeling and Verification Platform for SoCs Using Instruction-Level Abstractions},
  booktitle = {Proceedings of the 25th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2019)},
  location  = {Prague, Czech Republic},
  series    = {Lecture Notes in Computer Science},
  volume    = {11427},
  pages     = {351--357},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2019},
  url       = {https://doi.org/10.1007/978-3-030-17462-0\_21},
  doi       = {10.1007/978-3-030-17462-0\_21}
}

@misc{jacob2017quantization,
  title         = {Quantization and Training of Neural Networks for Efficient Integer-Arithmetic-Only Inference},
  author        = {Benoit Jacob and Skirmantas Kligys and Bo Chen and Menglong Zhu and Matthew Tang and Andrew Howard and Hartwig Adam and Dmitry Kalenichenko},
  year          = {2017},
  eprint        = {1712.05877},
  archiveprefix = {arXiv},
  primaryclass  = {cs.LG}
}

@inproceedings{jia202031,
  author    = {Tianyu Jia and
               Yuhao Ju and
               Jie Gu},
  title     = {31.3 A Compute-Adaptive Elastic Clock-Chain Technique with Dynamic Timing Enhancement for 2D PE-Array-Based Accelerators},
  booktitle = {Proceedings of the 2020 IEEE International Solid- State Circuits Conference},
  series    = {ISSCC 2020},
  location  = {San Francisco, CA, USA},
  pages     = {482--484},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2020},
  url       = {https://doi.org/10.1109/ISSCC19947.2020.9063062},
  doi       = {10.1109/ISSCC19947.2020.9063062}
}

@inproceedings{joshi2002denali,
  author    = {Joshi, Rajeev and Nelson, Greg and Randall, Keith},
  title     = {Denali: A Goal-Directed Superoptimizer},
  year      = {2002},
  isbn      = {1581134630},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/512529.512566},
  doi       = {10.1145/512529.512566},
  booktitle = {Proceedings of the ACM SIGPLAN 2002 Conference on Programming Language Design and Implementation},
  pages     = {304–314},
  numpages  = {11},
  keywords  = {optimizing compiler, superoptimizer},
  location  = {Berlin, Germany},
  series    = {PLDI '02}
}

@inproceedings{jouppi2017datacenter,
  author    = {Jouppi, Norman P. and Young, Cliff and Patil, Nishant and Patterson, David and Agrawal, Gaurav and Bajwa, Raminder and Bates, Sarah and Bhatia, Suresh and Boden, Nan and Borchers, Al and Boyle, Rick and Cantin, Pierre-luc and Chao, Clifford and Clark, Chris and Coriell, Jeremy and Daley, Mike and Dau, Matt and Dean, Jeffrey and Gelb, Ben and Ghaemmaghami, Tara Vazir and Gottipati, Rajendra and Gulland, William and Hagmann, Robert and Ho, C. Richard and Hogberg, Doug and Hu, John and Hundt, Robert and Hurt, Dan and Ibarz, Julian and Jaffey, Aaron and Jaworski, Alek and Kaplan, Alexander and Khaitan, Harshit and Killebrew, Daniel and Koch, Andy and Kumar, Naveen and Lacy, Steve and Laudon, James and Law, James and Le, Diemthu and Leary, Chris and Liu, Zhuyuan and Lucke, Kyle and Lundin, Alan and MacKean, Gordon and Maggiore, Adriana and Mahony, Maire and Miller, Kieran and Nagarajan, Rahul and Narayanaswami, Ravi and Ni, Ray and Nix, Kathy and Norrie, Thomas and Omernick, Mark and Penukonda, Narayana and Phelps, Andy and Ross, Jonathan and Ross, Matt and Salek, Amir and Samadiani, Emad and Severn, Chris and Sizikov, Gregory and Snelham, Matthew and Souter, Jed and Steinberg, Dan and Swing, Andy and Tan, Mercedes and Thorson, Gregory and Tian, Bo and Toma, Horia and Tuttle, Erick and Vasudevan, Vijay and Walter, Richard and Wang, Walter and Wilcox, Eric and Yoon, Doe Hyun},
  title     = {In-Datacenter Performance Analysis of a Tensor Processing Unit},
  year      = {2017},
  isbn      = {9781450348928},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3079856.3080246},
  doi       = {10.1145/3079856.3080246},
  booktitle = {Proceedings of the 44th Annual International Symposium on Computer Architecture},
  pages     = {1–12},
  numpages  = {12},
  location  = {Toronto, ON, Canada},
  series    = {ISCA '17}
}

@article{jouppi2020tpu,
  author     = {Jouppi, Norman P. and Yoon, Doe Hyun and Kurian, George and Li, Sheng and Patil, Nishant and Laudon, James and Young, Cliff and Patterson, David},
  title      = {A Domain-Specific Supercomputer for Training Deep Neural Networks},
  year       = {2020},
  issue_date = {July 2020},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {63},
  number     = {7},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/3360307},
  doi        = {10.1145/3360307},
  journal    = {Commun. ACM},
  month      = {jun},
  pages      = {67–78},
  numpages   = {12}
}

@article{kjolstad2017tensor,
  author     = {Kjolstad, Fredrik and Kamil, Shoaib and Chou, Stephen and Lugato, David and Amarasinghe, Saman},
  title      = {The Tensor Algebra Compiler},
  year       = {2017},
  issue_date = {October 2017},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {1},
  number     = {OOPSLA},
  url        = {https://doi.org/10.1145/3133901},
  doi        = {10.1145/3133901},
  journal    = {Proc. ACM Program. Lang.},
  month      = oct,
  articleno  = {77},
  numpages   = {29}
}

@article{komuravelli2016smt,
  author  = {Anvesh Komuravelli and
             Arie Gurfinkel and
             Sagar Chaki},
  title   = {SMT-based model checking for recursive programs},
  journal = {Formal Methods Syst. Des.},
  volume  = {48},
  number  = {3},
  pages   = {175--205},
  year    = {2016},
  url     = {https://doi.org/10.1007/s10703-016-0249-4},
  doi     = {10.1007/s10703-016-0249-4}
}

@inproceedings{kumar2014cakeml,
  author    = {Kumar, Ramana and Myreen, Magnus O. and Norrish, Michael and Owens, Scott},
  title     = {CakeML: A Verified Implementation of ML},
  year      = {2014},
  isbn      = {9781450325448},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2535838.2535841},
  doi       = {10.1145/2535838.2535841},
  booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {179–191},
  numpages  = {13},
  location  = {San Diego, California, USA},
  series    = {POPL '14}
}

@inproceedings{lai2019heterocl,
  author    = {Lai, Yi-Hsiang and Chi, Yuze and Hu, Yuwei and Wang, Jie and Yu, Cody Hao and Zhou, Yuan and Cong, Jason and Zhang, Zhiru},
  title     = {HeteroCL: A Multi-Paradigm Programming Infrastructure for Software-Defined Reconfigurable Computing},
  year      = {2019},
  isbn      = {9781450361378},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3289602.3293910},
  doi       = {10.1145/3289602.3293910},
  booktitle = {Proceedings of the 2019 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
  pages     = {242–251},
  numpages  = {10},
  location  = {Seaside, CA, USA},
  series    = {FPGA '19}
}

@article{lai2021programming,
  author     = {Lai, Yi-Hsiang and Ustun, Ecenur and Xiang, Shaojie and Fang, Zhenman and Rong, Hongbo and Zhang, Zhiru},
  title      = {Programming and Synthesis for Software-Defined FPGA Acceleration: Status and Future Prospects},
  year       = {2021},
  issue_date = {December 2021},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {14},
  number     = {4},
  issn       = {1936-7406},
  url        = {https://doi.org/10.1145/3469660},
  doi        = {10.1145/3469660},
  journal    = {ACM Trans. Reconfigurable Technol. Syst.},
  month      = sep,
  articleno  = {17},
  numpages   = {39}
}

@inproceedings{lattner2021mlir,
  author    = {Chris Lattner and
               Mehdi Amini and
               Uday Bondhugula and
               Albert Cohen and
               Andy Davis and
               Jacques A. Pienaar and
               River Riddle and
               Tatiana Shpeisman and
               Nicolas Vasilache and
               Oleksandr Zinenko},
  editor    = {Jae W. Lee and
               Mary Lou Soffa and
               Ayal Zaks},
  title     = {MLIR: Scaling Compiler Infrastructure for Domain Specific Computation},
  booktitle = {Proceedings of the IEEE/ACM International Symposium on Code Generation and Optimization},
  series    = {CGO '21},
  location  = {Seoul, South Korea},
  pages     = {2--14},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2021},
  url       = {https://doi.org/10.1109/CGO51591.2021.9370308},
  doi       = {10.1109/CGO51591.2021.9370308}
}

@artifactdataset{lecun1998mnist,
  author       = {LeCun, Yann and Cortes, Corinna and Burges, Christopher C.J.},
  title        = {The MNIST database of handwritten digits},
  year         = 1998,
  organization = {National Institute of Standards and Technology},
  url          = {http://yann.lecun.com/exdb/mnist/},
  lastaccessed = {Apr. 9, 2021}
}

@inproceedings{leroy2006formal,
  author    = {Leroy, Xavier},
  title     = {Formal Certification of a Compiler Back-End or: Programming a Compiler with a Proof Assistant},
  year      = {2006},
  isbn      = {1595930272},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1111037.1111042},
  doi       = {10.1145/1111037.1111042},
  booktitle = {Conference Record of the 33rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {42–54},
  numpages  = {13},
  location  = {Charleston, South Carolina, USA},
  series    = {POPL '06}
}

@online{linux2019onnx,
  key          = {LinuxOnnx},
  year         = {2019},
  title        = {ONNX: Open Neural Network Exchange},
  organization = {The Linux Foundation},
  url          = {https://onnx.ai/},
  lastaccessed = {Apr. 21, 2021}
}

@article{magaki2016asic,
  author     = {Taylor, Michael Bedford and Vega, Luis and Khazraee, Moein and Magaki, Ikuo and Davidson, Scott and Richmond, Dustin},
  title      = {ASIC Clouds: Specializing the Datacenter for Planet-Scale Applications},
  year       = {2020},
  issue_date = {July 2020},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {63},
  number     = {7},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/3399734},
  doi        = {10.1145/3399734},
  journal    = {Commun. ACM},
  month      = jun,
  pages      = {103–109},
  numpages   = {7}
}

@article{manolios2008refinement,
  author  = {Panagiotis Manolios and Sudarshan K. Srinivasan},
  title   = {A Refinement-Based Compositional Reasoning Framework for Pipelined Machine Verification},
  journal = {IEEE Trans. Very Large Scale Integr. Syst.},
  volume  = {16},
  number  = {4},
  pages   = {353--364},
  year    = {2008},
  url     = {https://doi.org/10.1109/TVLSI.2008.918120},
  doi     = {10.1109/TVLSI.2008.918120}
}

@inproceedings{menendez2017alive,
  author    = {Menendez, David and Nagarakatte, Santosh},
  title     = {Alive-Infer: Data-Driven Precondition Inference for Peephole Optimizations in LLVM},
  year      = {2017},
  isbn      = {9781450349888},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3062341.3062372},
  doi       = {10.1145/3062341.3062372},
  booktitle = {Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages     = {49–63},
  numpages  = {15},
  keywords  = {Learning, Inference, Alive, Compilers},
  location  = {Barcelona, Spain},
  series    = {PLDI 2017}
}

@inproceedings{menon2013machine,
  title     = {A Machine Learning Framework for Programming by Example},
  author    = {Aditya Menon and Omer Tamuz and Sumit Gulwani and Butler Lampson and Adam Kalai},
  booktitle = {Proceedings of the 30th International Conference on Machine Learning},
  pages     = {187--195},
  year      = {2013},
  editor    = {Sanjoy Dasgupta and David McAllester},
  volume    = {28},
  address   = {Atlanta, Georgia, USA},
  month     = {17--19 Jun},
  publisher = {PMLR},
  url       = {http://proceedings.mlr.press/v28/menon13.html}
}

@book{milner1990definition,
  author    = {Robin Milner and
               Mads Tofte and
               Robert Harper},
  title     = {Definition of standard ML},
  publisher = {MIT Press},
  address   = {Cambridge, MA, USA},
  year      = {1990},
  isbn      = {978-0-262-63132-7}
}

@online{mlperf,
  key          = {MLPerf},
  organization = {MLCommons},
  title        = {MLPerf Benchmarks},
  url          = {https://mlcommons.org},
  year         = {n.\,d.},
  lastaccessed = {Oct. 21, 2021}
}

@article{moreau2019hardware,
  author  = {Thierry Moreau and
             Tianqi Chen and
             Luis Vega and
             Jared Roesch and
             Eddie Q. Yan and
             Lianmin Zheng and
             Josh Fromm and
             Ziheng Jiang and
             Luis Ceze and
             Carlos Guestrin and
             Arvind Krishnamurthy},
  title   = {A Hardware-Software Blueprint for Flexible Deep Learning Specialization},
  journal = {IEEE Micro},
  volume  = {39},
  number  = {5},
  pages   = {8--16},
  year    = {2019},
  url     = {https://doi.org/10.1109/MM.2019.2928962},
  doi     = {10.1109/MM.2019.2928962}
}

@article{nane2015survey,
  author  = {Razvan Nane and
             Vlad Mihai Sima and
             Christian Pilato and
             Jongsok Choi and
             Blair Fort and
             Andrew Canis and
             Yu Ting Chen and
             Hsuan Hsiao and
             Stephen Dean Brown and
             Fabrizio Ferrandi and
             Jason Helge Anderson and
             Koen Bertels},
  title   = {A Survey and Evaluation of {FPGA} High-Level Synthesis Tools},
  journal = {IEEE Trans. Comput. Aided Des. Integr. Circuits Syst.},
  volume  = {35},
  number  = {10},
  pages   = {1591--1604},
  year    = {2016},
  url     = {https://doi.org/10.1109/TCAD.2015.2513673},
  doi     = {10.1109/TCAD.2015.2513673}
}

@article{nelson1980fast,
  author     = {Nelson, Greg and Oppen, Derek C.},
  title      = {Fast Decision Procedures Based on Congruence Closure},
  year       = {1980},
  issue_date = {April 1980},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {27},
  number     = {2},
  issn       = {0004-5411},
  url        = {https://doi.org/10.1145/322186.322198},
  doi        = {10.1145/322186.322198},
  journal    = {J. ACM},
  month      = apr,
  pages      = {356–364},
  numpages   = {9}
}

@inproceedings{nieuwenhuis2005proof,
  author    = {Robert Nieuwenhuis and
               Albert Oliveras},
  editor    = {J{\"{u}}rgen Giesl},
  title     = {Proof-Producing Congruence Closure},
  booktitle = {Proceedings of the 16th International Conference on Term Rewriting and Applications (RTA 2005)},
  location  = {Nara, Japan},
  series    = {Lecture Notes in Computer Science},
  volume    = {3467},
  pages     = {453--468},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2005},
  url       = {https://doi.org/10.1007/978-3-540-32033-3\_33},
  doi       = {10.1007/978-3-540-32033-3\_33}
}

@inproceedings{nikhil2004bluespec,
  author    = {Rishiyur Nikhil},
  title     = {Bluespec System Verilog: Efficient, Correct RTL from High Level Specifications},
  year      = {2004},
  isbn      = {0780385098},
  publisher = {IEEE Computer Society},
  address   = {USA},
  url       = {https://doi.org/10.1109/MEMCOD.2004.1459818},
  doi       = {10.1109/MEMCOD.2004.1459818},
  booktitle = {Proceedings of the Second ACM/IEEE International Conference on Formal Methods and Models for Co-Design},
  pages     = {69–70},
  numpages  = {2},
  series    = {MEMOCODE '04}
}

@inproceedings{noronha2018leflow,
  author    = {Noronha, Daniel H and Salehpour, Bahar and Wilton, Steven JE},
  title     = {LeFlow: Enabling flexible FPGA high-level synthesis of tensorflow deep neural networks},
  booktitle = {Proceedings of the Fifth International Workshop on FPGAs for Software Programmers},
  series    = {FSP '18},
  pages     = {1--8},
  year      = {2018},
  isbn      = {978-3-8007-4723-8},
  publisher = {VDE},
  address   = {Berlin, Garmany},
  location  = {Dublin, Ireland},
  url       = {https://ieeexplore.ieee.org/document/8470462}
}

@online{openvino,
  key          = {IntelOpenVino},
  organization = {Intel Corporation},
  title        = {OpenVINO Toolkit},
  url          = {https://software.intel.com/content/www/us/en/develop/tools/openvino-toolkit.html},
  year         = {n.\,d.},
  lastaccessed = {Apr. 23, 2021}
}

@inproceedings{park20219,
  author    = {Jun{-}Seok Park and
               Jun{-}Woo Jang and
               Heonsoo Lee and
               Dongwoo Lee and
               Sehwan Lee and
               Hanwoong Jung and
               Seungwon Lee and
               Suknam Kwon and
               Kyung{-}Ah Jeong and
               Joon{-}Ho Song and
               SukHwan Lim and
               Inyup Kang},
  title     = {9.5 A 6K-MAC Feature-Map-Sparsity-Aware Neural Processing Unit in 5nm Flagship Mobile SoC},
  booktitle = {Proceedings of the IEEE International Solid-State Circuits Conference},
  series    = {ISSCC 2021},
  location  = {San Francisco, CA, USA},
  pages     = {152--154},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2021},
  url       = {https://doi.org/10.1109/ISSCC42613.2021.9365928},
  doi       = {10.1109/ISSCC42613.2021.9365928}
}

@inproceedings{paszke2019pytorch,
  author    = {Adam Paszke and
               Sam Gross and
               Francisco Massa and
               Adam Lerer and
               James Bradbury and
               Gregory Chanan and
               Trevor Killeen and
               Zeming Lin and
               Natalia Gimelshein and
               Luca Antiga and
               Alban Desmaison and
               Andreas K{\"{o}}pf and
               Edward Yang and
               Zachary DeVito and
               Martin Raison and
               Alykhan Tejani and
               Sasank Chilamkurthy and
               Benoit Steiner and
               Lu Fang and
               Junjie Bai and
               Soumith Chintala},
  editor    = {Hanna M. Wallach and
               Hugo Larochelle and
               Alina Beygelzimer and
               Florence d'Alch{\'{e}}-Buc and
               Emily B. Fox and
               Roman Garnett},
  title     = {PyTorch: An Imperative Style, High-Performance Deep Learning Library},
  booktitle = {Proceedings of the Annual Conference on Advances in Neural Information Processing Systems},
  series    = {NeurIPS '19},
  location  = {Vancouver, BC, Canada},
  publisher = {Curran Associates, Inc.},
  address   = {USA},
  pages     = {8024--8035},
  year      = {2019},
  url       = {https://proceedings.neurips.cc/paper/2019/hash/bdbca288fee7f92f2bfa9f7012727740-Abstract.html}
}

@inproceedings{pilato2013bambu,
  author    = {Christian Pilato and Fabrizio Ferrandi},
  title     = {Bambu: A modular framework for the high level synthesis of memory-intensive applications},
  booktitle = {Proceedings of the 23rd International Conference on Field programmable Logic and Applications},
  location  = {Porto, Portugal},
  pages     = {1--4},
  publisher = {{IEEE}},
  year      = {2013},
  series    = {FPL '13},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1109/FPL.2013.6645550},
  doi       = {10.1109/FPL.2013.6645550}
}

@online{pt2020wlm,
  key          = {wlm},
  year         = {2020},
  title        = {Word-level language modeling RNN},
  organization = {PyTorch Team},
  url          = {https://github.com/pytorch/examples/tree/master/word_language_model},
  lastaccessed = {Nov. 18, 2021}
}


@inproceedings{rakamaric2014smack,
  author    = {Zvonimir Rakamaric and Michael Emmi},
  editor    = {Armin Biere and Roderick Bloem},
  title     = {SMACK: Decoupling Source Language Details from Verifier Implementations},
  booktitle = {Proceedings of the 26th International Conference on Computer Aided Verification (CAV 2014)},
  location  = {Vienna, Austria},
  series    = {Lecture Notes in Computer Science},
  volume    = {8559},
  pages     = {106--113},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2014},
  url       = {https://doi.org/10.1007/978-3-319-08867-9\_7},
  doi       = {10.1007/978-3-319-08867-9\_7}
}

@inproceedings{ramsey2011resourceable,
  author    = {Ramsey, Norman and Dias, Jo\~{a}o},
  title     = {Resourceable, Retargetable, Modular Instruction Selection Using a Machine-Independent, Type-Based Tiling of Low-Level Intermediate Code},
  year      = {2011},
  isbn      = {9781450304900},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1926385.1926451},
  doi       = {10.1145/1926385.1926451},
  booktitle = {Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {575–586},
  numpages  = {12},
  location  = {Austin, Texas, USA},
  series    = {POPL '11}
}

@inproceedings{reagen2016minerva,
  author    = {Reagen, Brandon and Whatmough, Paul and Adolf, Robert and Rama, Saketh and Lee, Hyunkwang and Lee, Sae Kyu and Hern\'{a}ndez-Lobato, Jos\'{e} Miguel and Wei, Gu-Yeon and Brooks, David},
  title     = {Minerva: Enabling Low-Power, Highly-Accurate Deep Neural Network Accelerators},
  year      = {2016},
  isbn      = {9781467389471},
  publisher = {IEEE Press},
  url       = {https://doi.org/10.1109/ISCA.2016.32},
  doi       = {10.1109/ISCA.2016.32},
  booktitle = {Proceedings of the 43rd International Symposium on Computer Architecture},
  pages     = {267–278},
  numpages  = {12},
  location  = {Seoul, Republic of Korea},
  address   = {New York, NY, USA},
  series    = {ISCA '16}
}

@inproceedings{reddi2020mlperf,
  author    = {Reddi, Vijay Janapa and Cheng, Christine and Kanter, David and Mattson, Peter and Schmuelling, Guenther and Wu, Carole-Jean and Anderson, Brian and Breughe, Maximilien and Charlebois, Mark and Chou, William and Chukka, Ramesh and Coleman, Cody and Davis, Sam and Deng, Pan and Diamos, Greg and Duke, Jared and Fick, Dave and Gardner, J. Scott and Hubara, Itay and Idgunji, Sachin and Jablin, Thomas B. and Jiao, Jeff and John, Tom St. and Kanwar, Pankaj and Lee, David and Liao, Jeffery and Lokhmotov, Anton and Massa, Francisco and Meng, Peng and Micikevicius, Paulius and Osborne, Colin and Pekhimenko, Gennady and Rajan, Arun Tejusve Raghunath and Sequeira, Dilip and Sirasao, Ashish and Sun, Fei and Tang, Hanlin and Thomson, Michael and Wei, Frank and Wu, Ephrem and Xu, Lingjie and Yamada, Koichi and Yu, Bing and Yuan, George and Zhong, Aaron and Zhang, Peizhao and Zhou, Yuchen},
  title     = {MLPerf Inference Benchmark},
  year      = {2020},
  isbn      = {9781728146614},
  publisher = {IEEE Press},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1109/ISCA45697.2020.00045},
  doi       = {10.1109/ISCA45697.2020.00045},
  booktitle = {Proceedings of the ACM/IEEE 47th Annual International Symposium on Computer Architecture},
  pages     = {446–459},
  numpages  = {14},
  location  = {Virtual Event},
  series    = {ISCA '20}
}

@misc{roesch2019relay,
  title         = {Relay: A High-Level Compiler for Deep Learning},
  author        = {Jared Roesch and Steven Lyubomirsky and Marisa Kirisame and Logan Weber and Josh Pollock and Luis Vega and Ziheng Jiang and Tianqi Chen and Thierry Moreau and Zachary Tatlock},
  year          = {2019},
  eprint        = {1904.08368},
  archiveprefix = {arXiv},
  primaryclass  = {cs.LG}
}

@inproceedings{rossi20214,
  author    = {Davide Rossi and
               Francesco Conti and
               Manuel Eggimann and
               Stefan Mach and
               Alfio Di Mauro and
               Marco Guermandi and
               Giuseppe Tagliavini and
               Antonio Pullini and
               Igor Loi and
               Jie Chen and
               Eric Flamand and
               Luca Benini},
  title     = {4.4 A 1.3TOPS/W @ 32GOPS Fully Integrated 10-Core SoC for IoT End-Nodes with 1.7{\(\mu\)}W Cognitive Wake-Up From MRAM-Based State-Retentive Sleep Mode},
  booktitle = {Proceedings of the IEEE International Solid-State Circuits Conference},
  series    = {ISSCC 2021},
  location  = {San Francisco, CA, USA},
  pages     = {60--62},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2021},
  url       = {https://doi.org/10.1109/ISSCC42613.2021.9365939},
  doi       = {10.1109/ISSCC42613.2021.9365939}
}

@inproceedings{saito2021analog,
  author    = {D. Saito and
               T. Kobayashi and
               Hiroki Koga and
               Nicolo Ronchi and
               K. Banerjee and
               Y. Shuto and
               Jun Okuno and
               K. Konishi and
               Luca Di Piazza and
               A. Mallik and
               Jan Van Houdt and
               M. Tsukamoto and
               K. Ohkuri and
               Taku Umebayashi and
               Takayuki Ezaki},
  title     = {Analog In-memory Computing in FeFET-based 1T1R Array for Edge AI Applications},
  booktitle = {Proceedings of the 2021 Symposium on VLSI Circuits},
  location  = {Kyoto, Japan},
  pages     = {1--2},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2021},
  url       = {https://doi.org/10.23919/VLSICircuits52068.2021.9492479},
  doi       = {10.23919/VLSICircuits52068.2021.9492479}
}

@misc{sandler2019mobilenetv2,
  title         = {MobileNetV2: Inverted Residuals and Linear Bottlenecks},
  author        = {Mark Sandler and Andrew Howard and Menglong Zhu and Andrey Zhmoginov and Liang-Chieh Chen},
  year          = {2019},
  eprint        = {1801.04381},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CV}
}

@inproceedings{schmidt20214,
  author    = {Colin Schmidt and
               John Charles Wright and
               Zhongkai Wang and
               Eric Chang and
               Albert J. Ou and
               Woo{-}Rham Bae and
               Sean Huang and
               Anita Flynn and
               Brian C. Richards and
               Krste Asanovic and
               Elad Alon and
               Borivoje Nikolic},
  title     = {4.3 An Eight-Core 1.44GHz RISC-V Vector Machine in 16nm FinFET},
  booktitle = {Proceedings of the IEEE International Solid-State Circuits Conference},
  series    = {ISSCC 2021},
  location  = {San Francisco, CA, USA},
  pages     = {58--60},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2021},
  url       = {https://doi.org/10.1109/ISSCC42613.2021.9365789},
  doi       = {10.1109/ISSCC42613.2021.9365789}
}

@inproceedings{shaw2008anton,
  author    = {Shaw, David E. and Deneroff, Martin M. and Dror, Ron O. and Kuskin, Jeffrey S. and Larson, Richard H. and Salmon, John K. and Young, Cliff and Batson, Brannon and Bowers, Kevin J. and Chao, Jack C. and Eastwood, Michael P. and Gagliardo, Joseph and Grossman, J. P. and Ho, C. Richard and Ierardi, Douglas J. and Kolossv\'{a}ry, Istv\'{a}n and Klepeis, John L. and Layman, Timothy and McLeavey, Christine and Moraes, Mark A. and Mueller, Rolf and Priest, Edward C. and Shan, Yibing and Spengler, Jochen and Theobald, Michael and Towles, Brian and Wang, Stanley C.},
  title     = {Anton, a Special-Purpose Machine for Molecular Dynamics Simulation},
  year      = {2007},
  isbn      = {9781595937063},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1250662.1250664},
  doi       = {10.1145/1250662.1250664},
  booktitle = {Proceedings of the 34th Annual International Symposium on Computer Architecture},
  pages     = {1–12},
  numpages  = {12},
  location  = {San Diego, California, USA},
  series    = {ISCA '07}
}

@inproceedings{singh2016swapper,
  author    = {Singh, Rohit and Solar-Lezama, Armando},
  title     = {SWAPPER: A Framework for Automatic Generation of Formula Simplifiers Based on Conditional Rewrite Rules},
  year      = {2016},
  isbn      = {9780983567868},
  publisher = {FMCAD Inc},
  address   = {Austin, Texas},
  booktitle = {Proceedings of the 16th Conference on Formal Methods in Computer-Aided Design},
  pages     = {185–192},
  numpages  = {8},
  location  = {Mountain View, California},
  series    = {FMCAD '16}
}

@inproceedings{skalicky2018hot,
  author    = {Sam Skalicky and
               Joshua S. Monson and
               Andrew G. Schmidt and
               Matthew French},
  title     = {Hot \& Spicy: Improving Productivity with Python and HLS for FPGAs},
  booktitle = {Proceedings of the 26th IEEE Annual International Symposium on Field-Programmable Custom Computing Machines},
  series    = {FCCM '18},
  location  = {Boulder, CO, USA},
  pages     = {85--92},
  publisher = {IEEE Computer Society},
  address   = {New York, NY, USA},
  year      = {2018},
  url       = {https://doi.org/10.1109/FCCM.2018.00022},
  doi       = {10.1109/FCCM.2018.00022}
}

@inproceedings{smith2021pure,
  author    = {Smith, Gus Henry and Liu, Andrew and Lyubomirsky, Steven and Davidson, Scott and McMahan, Joseph and Taylor, Michael and Ceze, Luis and Tatlock, Zachary},
  title     = {Pure Tensor Program Rewriting via Access Patterns (Representation Pearl)},
  year      = {2021},
  isbn      = {9781450384674},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3460945.3464953},
  doi       = {10.1145/3460945.3464953},
  booktitle = {Proceedings of the 5th ACM SIGPLAN International Symposium on Machine Programming},
  pages     = {21–31},
  numpages  = {11},
  location  = {Virtual, Canada},
  series    = {MAPS 2021}
}

@inproceedings{stepp2011equality,
  author    = {Michael Stepp and
               Ross Tate and
               Sorin Lerner},
  editor    = {Ganesh Gopalakrishnan and
               Shaz Qadeer},
  title     = {Equality-Based Translation Validator for {LLVM}},
  booktitle = {Proceedings of the 23rd International Conference on Computer Aided Verification (CAV 2011)},
  location  = {Snowbird, UT, USA},
  series    = {Lecture Notes in Computer Science},
  volume    = {6806},
  pages     = {737--742},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2011},
  url       = {https://doi.org/10.1007/978-3-642-22110-1\_59},
  doi       = {10.1007/978-3-642-22110-1\_59}
}

@article{subramanyan2018template,
  author  = {Pramod Subramanyan and
             Bo-Yuan Huang and
             Yakir Vizel and
             Aarti Gupta and
             Sharad Malik},
  title   = {Template-Based Parameterized Synthesis of Uniform Instruction-Level
             Abstractions for SoC Verification},
  journal = {{IEEE} Trans. Comput. Aided Des. Integr. Circuits Syst.},
  volume  = {37},
  number  = {8},
  pages   = {1692--1705},
  year    = {2018},
  url     = {https://doi.org/10.1109/TCAD.2017.2764482},
  doi     = {10.1109/TCAD.2017.2764482}
}

@inproceedings{tai2015improved,
  author    = {Kai Sheng Tai and
               Richard Socher and
               Christopher D. Manning},
  title     = {Improved Semantic Representations From Tree-Structured Long Short-Term Memory Networks},
  booktitle = {Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing of the Asian Federation of Natural Language Processing},
  series    = {ACL '15},
  location  = {Beijing, China},
  volume    = {1},
  pages     = {1556--1566},
  publisher = {The Association for Computer Linguistics},
  address   = {New York, NY, USA},
  year      = {2015},
  url       = {https://doi.org/10.3115/v1/p15-1150},
  doi       = {10.3115/v1/p15-1150}
}

@inproceedings{tambe2020algorithm,
  author    = {Tambe, Thierry and Yang, En-Yu and Wan, Zishen and Deng, Yuntian and Reddi, Vijay Janapa and Rush, Alexander and Brooks, David and Wei, Gu-Yeon},
  title     = {Algorithm-Hardware Co-Design of Adaptive Floating-Point Encodings for Resilient Deep Learning Inference},
  year      = {2020},
  isbn      = {9781450367257},
  publisher = {IEEE Press},
  address   = {USA},
  booktitle = {Proceedings of the 57th ACM/EDAC/IEEE Design Automation Conference},
  articleno = {51},
  numpages  = {6},
  location  = {Virtual Event, USA},
  series    = {DAC '20}
}

@inproceedings{tambe20219,
  author    = {Thierry Tambe and
               En-Yu Yang and
               Glenn G. Ko and
               Yuji Chai and
               Coleman Hooper and
               Marco Donato and
               Paul N. Whatmough and
               Alexander M. Rush and
               David Brooks and
               Gu-Yeon Wei},
  title     = {9.8 A 25mm\({}^{\mbox{2}}\) SoC for IoT Devices with 18ms Noise-Robust Speech-to-Text Latency via Bayesian Speech Denoising and Attention-Based Sequence-to-Sequence DNN Speech Recognition in 16nm FinFET},
  booktitle = {Proceedings of the IEEE International Solid-State Circuits Conference},
  series    = {ISSCC '21},
  pages     = {158--160},
  year      = {2021},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1109/ISSCC42613.2021.9366062},
  doi       = {10.1109/ISSCC42613.2021.9366062}
}

@inproceedings{tan2019efficientnet,
  author    = {Mingxing Tan and Quoc V. Le},
  editor    = {Kamalika Chaudhuri and Ruslan Salakhutdinov},
  title     = {EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks},
  booktitle = {Proceedings of the 36th International Conference on Machine Learning},
  series    = {ICML '19},
  location  = {Long Beach, California, USA},
  volume    = {97},
  pages     = {6105--6114},
  publisher = {PMLR},
  address   = {Atlanta, Georgia, USA},
  year      = {2019},
  url       = {http://proceedings.mlr.press/v97/tan19a.html}
}

@inproceedings{tate2011equality,
  author    = {Tate, Ross and Stepp, Michael and Tatlock, Zachary and Lerner, Sorin},
  title     = {Equality Saturation: A New Approach to Optimization},
  year      = {2009},
  isbn      = {9781605583792},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1480881.1480915},
  doi       = {10.1145/1480881.1480915},
  booktitle = {Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {264–276},
  numpages  = {13},
  location  = {Savannah, GA, USA},
  series    = {POPL '09}
}

@misc{touvron2021resmlp,
  author        = {Hugo Touvron and
                   Piotr Bojanowski and
                   Mathilde Caron and
                   Matthieu Cord and
                   Alaaeldin El{-}Nouby and
                   Edouard Grave and
                   Armand Joulin and
                   Gabriel Synnaeve and
                   Jakob Verbeek and
                   Herv{\'{e}} J{\'{e}}gou},
  title         = {ResMLP: Feedforward networks for image classification with data-efficient training},
  year          = {2021},
  url           = {https://arxiv.org/abs/2105.03404},
  eprint        = {2105.03404},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CV}
}

@inproceedings{truong2020fault,
  author    = {Lenny Truong and
               Steven Herbst and
               Rajsekhar Setaluri and
               Makai Mann and
               Ross G. Daly and
               Keyi Zhang and
               Caleb Donovick and
               Daniel Stanley and
               Mark Horowitz and
               Clark W. Barrett and
               Pat Hanrahan},
  editor    = {Shuvendu K. Lahiri and Chao Wang},
  title     = {fault: A Python Embedded Domain-Specific Language for Metaprogramming Portable Hardware Verification Components},
  booktitle = {Proceedings of the 32nd International Conference on Computer Aided Verification (CAV 2020)},
  location  = {Los Angeles, CA, USA},
  series    = {Lecture Notes in Computer Science},
  volume    = {12224},
  pages     = {403--414},
  publisher = {Springer},
  address   = {Berlin, Heidelberg},
  year      = {2020},
  url       = {https://doi.org/10.1007/978-3-030-53288-8\_19},
  doi       = {10.1007/978-3-030-53288-8\_19}
}

@misc{vaswani2017attention,
  title         = {Attention Is All You Need},
  author        = {Ashish Vaswani and Noam Shazeer and Niki Parmar and Jakob Uszkoreit and Llion Jones and Aidan N. Gomez and Lukasz Kaiser and Illia Polosukhin},
  year          = {2017},
  eprint        = {1706.03762},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CL}
}
 
@online{vcs,
  key          = {VCS},
  organization = {Synopsys, Inc.},
  title        = {VCS: Industry’s Highest Performance Simulation Solution},
  url          = {https://www.synopsys.com/verification/simulation/vcs.html},
  year         = {2021},
  lastaccessed = {Apr. 24, 2021}
}
 
@inproceedings{wang2021autosa,
  author    = {Wang, Jie and Guo, Licheng and Cong, Jason},
  title     = {AutoSA: A Polyhedral Compiler for High-Performance Systolic Arrays on FPGA},
  year      = {2021},
  isbn      = {9781450382182},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3431920.3439292},
  doi       = {10.1145/3431920.3439292},
  booktitle = {The 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
  pages     = {93–104},
  numpages  = {12},
  location  = {Virtual Event, USA},
  series    = {FPGA '21}
}
 
@inproceedings{wei2019overcoming,
  author    = {Wei, Xuechao and Liang, Yun and Cong, Jason},
  title     = {Overcoming Data Transfer Bottlenecks in FPGA-Based DNN Accelerators via Layer Conscious Memory Management},
  year      = {2019},
  isbn      = {9781450367257},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3316781.3317875},
  doi       = {10.1145/3316781.3317875},
  booktitle = {Proceedings of the 56th Annual Design Automation Conference 2019},
  articleno = {125},
  numpages  = {6},
  location  = {Las Vegas, NV, USA},
  series    = {DAC '19}
}
 

@inproceedings{wei2021dnnfusion,
  author    = {Niu, Wei and Guan, Jiexiong and Wang, Yanzhi and Agrawal, Gagan and Ren, Bin},
  title     = {DNNFusion: Accelerating Deep Neural Networks Execution with Advanced Operator Fusion},
  year      = {2021},
  isbn      = {9781450383912},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3453483.3454083},
  doi       = {10.1145/3453483.3454083},
  booktitle = {Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
  pages     = {883–898},
  numpages  = {16},
  location  = {Virtual, Canada},
  series    = {PLDI 2021}
}
 
@inproceedings{whatmough201916nm,
  author    = {Paul N. Whatmough and
               Sae Kyu Lee and
               Marco Donato and
               Hsea{-}Ching Hsueh and
               Sam Likun Xi and
               Udit Gupta and
               Lillian Pentecost and
               Glenn G. Ko and
               David M. Brooks and
               Gu{-}Yeon Wei},
  title     = {A 16nm 25mm\({}^{\mbox{2}}\) SoC with a 54.5x Flexibility-Efficiency Range from Dual-Core Arm Cortex-A53 to eFPGA and Cache-Coherent Accelerators},
  booktitle = {Proceedings of the 2019 Symposium on VLSI Circuits},
  location  = {Kyoto, Japan},
  pages     = {34},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  year      = {2019},
  url       = {https://doi.org/10.23919/VLSIC.2019.8778002},
  doi       = {10.23919/VLSIC.2019.8778002}
}
 
@article{whitfield1997approach,
  author     = {Whitfield, Deborah L. and Soffa, Mary Lou},
  title      = {An Approach for Exploring Code Improving Transformations},
  year       = {1997},
  issue_date = {Nov. 1997},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {19},
  number     = {6},
  issn       = {0164-0925},
  url        = {https://doi.org/10.1145/267959.267960},
  doi        = {10.1145/267959.267960},
  journal    = {ACM Trans. Program. Lang. Syst.},
  month      = nov,
  pages      = {1053–1084},
  numpages   = {32}
}
 
  
@misc{wu2016google,
  author        = {Yonghui Wu and
                   Mike Schuster and
                   Zhifeng Chen and
                   Quoc V. Le and
                   Mohammad Norouzi and
                   Wolfgang Macherey and
                   Maxim Krikun and
                   Yuan Cao and
                   Qin Gao and
                   Klaus Macherey and
                   Jeff Klingner and
                   Apurva Shah and
                   Melvin Johnson and
                   Xiaobing Liu and
                   Lukasz Kaiser and
                   Stephan Gouws and
                   Yoshikiyo Kato and
                   Taku Kudo and
                   Hideto Kazawa and
                   Keith Stevens and
                   George Kurian and
                   Nishant Patil and
                   Wei Wang and
                   Cliff Young and
                   Jason Smith and
                   Jason Riesa and
                   Alex Rudnick and
                   Oriol Vinyals and
                   Greg Corrado and
                   Macduff Hughes and
                   Jeffrey Dean},
  title         = {Google's Neural Machine Translation System: Bridging the Gap between Human and Machine Translation},
  year          = {2016},
  url           = {http://arxiv.org/abs/1609.08144},
  eprint        = {1609.08144},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CL}
}

@inproceedings{xilinxdnn,
  author    = {Brian Sun and Victor Wu and Thomas Branca and Yi Wang and Justin Oo and Elliott Delaye and Aaron Ng and Paolo D'Alberto and Sean Settle and Bill Teng and Manasa Bollavaram and Chaithanya Dudha and Hanh Hoang and Swati Gupta and Alina Huang and Ephrem Wu and Samuel Bayliss and Phil James-Roxby and Ralph Wittig and Ashish Sirasao and Ravi Sunkavalli},
  title     = {Xilinx Tensor Processor: An Inference Engine, Network Compiler + Runtime for Xilinx FPGAs},
  booktitle = {IEEE Hot Chips 30 Symposium (HCS)},
  pages     = {1--20},
  year      = {2018},
  publisher = {IEEE},
  address   = {New York, NY, USA},
  url       = {https://old.hotchips.org/hc30/2conf/2.11_Xilinx_HC30_Xilinx_Rahul_Nimaiyar_08212018_v2.pdf}
}

@inproceedings{xing2018formal,
  author    = {Xing, Yue and Huang, Bo-Yuan and Gupta, Aarti and Malik, Sharad},
  title     = {A Formal Instruction-Level GPU Model for Scalable Verification},
  year      = {2018},
  isbn      = {9781450359504},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3240765.3240771},
  doi       = {10.1145/3240765.3240771},
  booktitle = {Proceedings of the International Conference on Computer-Aided Design},
  articleno = {130},
  numpages  = {8},
  location  = {San Diego, California},
  series    = {ICCAD '18}
}

@online{xsdk,
  key          = {XilinxSDK},
  organization = {Xilinx Inc.},
  title        = {The Xilinx Software Development Kit (XSDK)},
  url          = {https://www.xilinx.com/products/design-tools/embedded-software/sdk.html},
  year         = {n.\,d.},
  lastaccessed = {Apr. 24, 2021}
}

@inproceedings{zhang2016cambricon,
  author    = {Zhang, Shijin and Du, Zidong and Zhang, Lei and Lan, Huiying and Liu, Shaoli and Li, Ling and Guo, Qi and Chen, Tianshi and Chen, Yunji},
  title     = {Cambricon-x: An Accelerator for Sparse Neural Networks},
  year      = {2016},
  publisher = {IEEE Press},
  booktitle = {Proceedings of the 49th Annual IEEE/ACM International Symposium on Microarchitecture},
  articleno = {20},
  numpages  = {12},
  location  = {Taipei, Taiwan},
  address   = {New York, NY, USA},
  series    = {MICRO-49},
  doi       = {10.1109/MICRO.2016.7783723}
}

@article{zhang2018graphit,
  author     = {Zhang, Yunming and Yang, Mengjiao and Baghdadi, Riyadh and Kamil, Shoaib and Shun, Julian and Amarasinghe, Saman},
  title      = {GraphIt: A High-Performance Graph DSL},
  year       = {2018},
  issue_date = {November 2018},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {2},
  number     = {OOPSLA},
  url        = {https://doi.org/10.1145/3276491},
  doi        = {10.1145/3276491},
  journal    = {Proc. ACM Program. Lang.},
  month      = oct,
  articleno  = {121},
  numpages   = {30}
}

@book{lapack,
author = {Anderson, E. and Bai, Z. and Bischof, C. and Blackford, L. S. and Demmel, J. and Dongarra, Jack J. and Du Croz, J. and Hammarling, S. and Greenbaum, A. and McKenney, A. and Sorensen, D.},
title = {LAPACK Users' Guide (Third Ed.)},
year = {1999},
isbn = {0898714478},
publisher = {Society for Industrial and Applied Mathematics},
address = {USA}
}

@misc{merity2016pointer,
      title={Pointer Sentinel Mixture Models}, 
      author={Stephen Merity and Caiming Xiong and James Bradbury and Richard Socher},
      year={2016},
      eprint={1609.07843},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@inproceedings{schkufza2019cascade,
author = {Schkufza, Eric and Wei, Michael and Rossbach, Christopher J.},
title = {Just-In-Time Compilation for Verilog: A New Technique for Improving the FPGA Programming Experience},
year = {2019},
isbn = {9781450362405},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3297858.3304010},
doi = {10.1145/3297858.3304010},
booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {271–286},
numpages = {16},
keywords = {fpga, cascade, verilog, just-in-time, compiler, jit},
location = {Providence, RI, USA},
series = {ASPLOS '19}
}

@article{nandi2021ruler,
author = {Nandi, Chandrakana and Willsey, Max and Zhu, Amy and Wang, Yisu Remy and Saiki, Brett and Anderson, Adam and Schulz, Adriana and Grossman, Dan and Tatlock, Zachary},
title = {Rewrite Rule Inference Using Equality Saturation},
year = {2021},
issue_date = {October 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {OOPSLA},
url = {https://doi.org/10.1145/3485496},
doi = {10.1145/3485496},
journal = {Proc. ACM Program. Lang.},
month = {oct},
articleno = {119},
numpages = {28},
keywords = {Program Synthesis, Rewrite Rules, Equality Saturation}
}

@inproceedings{pitclaudel2021cuttlesim,
author = {Pit-Claudel, Cl\'{e}ment and Bourgeat, Thomas and Lau, Stella and Arvind and Chlipala, Adam},
title = {Effective Simulation and Debugging for a High-Level Hardware Language Using Software Compilers},
year = {2021},
isbn = {9781450383172},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3445814.3446720},
doi = {10.1145/3445814.3446720},
booktitle = {Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {789–803},
numpages = {15},
keywords = {compilation, hardware debugging, Hardware simulation},
location = {Virtual, USA},
series = {ASPLOS 2021}
}

@online{verilator,
  key          = {Verilator},
  organization = {Veripool},
  title        = {Verilator},
  url          = {https://www.veripool.org/verilator/},
  year         = {n.\,d.},
  lastaccessed = {Nov. 18, 2021}
}

@inproceedings{bourgeat2020essence,
  title={The essence of Bluespec: a core language for rule-based hardware design},
  author={Bourgeat, Thomas and Pit-Claudel, Cl{\'e}ment and Chlipala, Adam},
  booktitle={Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={243--257},
  year={2020}
}


@article{huang2022specialized,
  title={Specialized Accelerators and Compiler Flows: Replacing Accelerator APIs with a Formal Software/Hardware Interface},
  author={Huang, Bo-Yuan and Lyubomirsky, Steven and Li, Yi and He, Mike and Tambe, Thierry and Smith, Gus Henry and Gaonkar, Akash and Canumalla, Vishal and Wei, Gu-Yeon and Gupta, Aarti and others},
  journal={arXiv preprint arXiv:2203.00218},
  year={2022}
}

@article{liu2022verified,
  title={Verified tensor-program optimization via high-level scheduling rewrites},
  author={Liu, Amanda and Bernstein, Gilbert Louis and Chlipala, Adam and Ragan-Kelley, Jonathan},
  journal={Proceedings of the ACM on Programming Languages},
  volume={6},
  number={POPL},
  pages={1--28},
  year={2022},
  publisher={ACM New York, NY, USA}
}

@article{bernstein2020differentiating,
  title={Differentiating a Tensor Language},
  author={Bernstein, Gilbert and Mara, Michael and Li, Tzu-Mao and Maclaurin, Dougal and Ragan-Kelley, Jonathan},
  journal={arXiv preprint arXiv:2008.11256},
  year={2020}
}

@inproceedings{ellis2018dreamcoder,
  title={Dreamcoder: Bootstrapping domain-specific languages for neurally-guided bayesian program learning},
  author={Ellis, Kevin and Morales, Lucas and Meyer, Mathias Sabl and Solar-Lezama, Armando and Tenenbaum, Joshua B},
  booktitle={Proceedings of the 2nd Workshop on Neural Abstract Machines and Program Induction},
  year={2018}
}

@inproceedings{ellis2021dreamcoder,
  title={Dreamcoder: Bootstrapping inductive program synthesis with wake-sleep library learning},
  author={Ellis, Kevin and Wong, Catherine and Nye, Maxwell and Sabl{\'e}-Meyer, Mathias and Morales, Lucas and Hewitt, Luke and Cary, Luc and Solar-Lezama, Armando and Tenenbaum, Joshua B},
  booktitle={Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
  pages={835--850},
  year={2021}
}

@article{ellis2020dreamcoder,
  title={Dreamcoder: Growing generalizable, interpretable knowledge with wake-sleep bayesian program learning},
  author={Ellis, Kevin and Wong, Catherine and Nye, Maxwell and Sable-Meyer, Mathias and Cary, Luc and Morales, Lucas and Hewitt, Luke and Solar-Lezama, Armando and Tenenbaum, Joshua B},
  journal={arXiv preprint arXiv:2006.08381},
  year={2020}
}

@inproceedings{nigam2021compiler,
  title={A compiler infrastructure for accelerator generators},
  author={Nigam, Rachit and Thomas, Samuel and Li, Zhijing and Sampson, Adrian},
  booktitle={Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages={804--817},
  year={2021}
}

@inproceedings{izraelevitz2017reusability,
  title={Reusability is FIRRTL ground: Hardware construction languages, compiler frameworks, and transformations},
  author={Izraelevitz, Adam and Koenig, Jack and Li, Patrick and Lin, Richard and Wang, Angie and Magyar, Albert and Kim, Donggyu and Schmidt, Colin and Markley, Chick and Lawson, Jim and others},
  booktitle={2017 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)},
  pages={209--216},
  year={2017},
  organization={IEEE}
}

@article{li2016specification,
  title={Specification for the FIRRTL Language},
  author={Li, Patrick S and Izraelevitz, Adam M and Bachrach, Jonathan},
  journal={EECS Department, University of California, Berkeley, Tech. Rep. UCB/EECS-2016-9},
  year={2016}
}

@inproceedings{eldridge2021mlir,
  title={MLIR as Hardware Compiler Infrastructure},
  author={Eldridge, Schuyler and Barua, Prithayan and Chapyzhenka, Aliaksei and Izraelevitz, Adam and Koenig, Jack and Lattner, Chris and Lenharth, Andrew and Leontiev, George and Schuiki, Fabian and Sunder, Ram and others},
  booktitle={Workshop on Open-Source EDA Technology (WOSET)},
  year={2021}
}

@inproceedings{vega2021reticle,
  title={Reticle: a virtual machine for programming modern FPGAs},
  author={Vega, Luis and McMahan, Joseph and Sampson, Adrian and Grossman, Dan and Ceze, Luis},
  booktitle={Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
  pages={756--771},
  year={2021}
}

@article{phothilimthana2014chlorophyll,
  title={Chlorophyll: Synthesis-aided compiler for low-power spatial architectures},
  author={Phothilimthana, Phitchaya Mangpo and Jelvis, Tikhon and Shah, Rohin and Totla, Nishant and Chasins, Sarah and Bodik, Rastislav},
  journal={ACM SIGPLAN Notices},
  volume={49},
  number={6},
  pages={396--407},
  year={2014},
  publisher={ACM New York, NY, USA}
}

@inproceedings{torlak2013growing,
  title={Growing solver-aided languages with Rosette},
  author={Torlak, Emina and Bodik, Rastislav},
  booktitle={Proceedings of the 2013 ACM international symposium on New ideas, new paradigms, and reflections on programming \& software},
  pages={135--152},
  year={2013}
}

@article{torlak2014lightweight,
  title={A lightweight symbolic virtual machine for solver-aided host languages},
  author={Torlak, Emina and Bodik, Rastislav},
  journal={ACM SIGPLAN Notices},
  volume={49},
  number={6},
  pages={530--541},
  year={2014},
  publisher={ACM New York, NY, USA}
}

@misc{ieee20191076,
  title={1076-2019—IEEE Standard for VHDL Language Reference Manual},
  author={IEEE},
  year={2019},
  publisher={IEEE Piscataway, NJ, USA}
}

@article{design2005ieee,
  title={IEEE Standard for SystemVerilog Unified Hardware Design, Specification, and Verification Language Standard IEEE 1800},
  author={Design Automation Standards Committee and others},
  journal={http://www. edastds. org/sv/},
  year={2005}
}

@article{herklotz2021formal,
  title={Formal verification of high-level synthesis},
  author={Herklotz, Yann and Pollard, James D and Ramanathan, Nadesh and Wickerson, John},
  journal={Proceedings of the ACM on Programming Languages},
  volume={5},
  number={OOPSLA},
  pages={1--30},
  year={2021},
  publisher={ACM New York, NY, USA}
}

@inproceedings{leroy2016compcert,
  title={CompCert-a formally verified optimizing compiler},
  author={Leroy, Xavier and Blazy, Sandrine and K{\"a}stner, Daniel and Schommer, Bernhard and Pister, Markus and Ferdinand, Christian},
  booktitle={ERTS 2016: Embedded Real Time Software and Systems, 8th European Congress},
  year={2016}
}

@inproceedings{herklotz2021empirical,
  title={An Empirical Study of the Reliability of High-Level Synthesis Tools},
  author={Herklotz, Yann and Du, Zewei and Ramanathan, Nadesh and Wickerson, John},
  booktitle={2021 IEEE 29th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)},
  pages={219--223},
  year={2021},
  organization={IEEE}
}

@inproceedings{rosenband2005hardware,
  title={Hardware synthesis from guarded atomic actions with performance specifications},
  author={Rosenband, Daniel L and others},
  booktitle={ICCAD-2005. IEEE/ACM International Conference on Computer-Aided Design, 2005.},
  pages={784--791},
  year={2005},
  organization={IEEE}
}

@article{shen1999using,
  title={Using term rewriting systems to design and verify processors},
  author={Shen, Xiaowei and others},
  journal={IEEE Micro},
  volume={19},
  number={3},
  pages={36--46},
  year={1999},
  publisher={IEEE}
}

@article{mirhoseini2021graph,
  title={A graph placement methodology for fast chip design},
  author={Mirhoseini, Azalia and Goldie, Anna and Yazgan, Mustafa and Jiang, Joe Wenjie and Songhori, Ebrahim and Wang, Shen and Lee, Young-Joon and Johnson, Eric and Pathak, Omkar and Nazi, Azade and others},
  journal={Nature},
  volume={594},
  number={7862},
  pages={207--212},
  year={2021},
  publisher={Nature Publishing Group}
}

@article{teich2012hardware,
  title={Hardware/software codesign: The past, the present, and predicting the future},
  author={Teich, J{\"u}rgen},
  journal={Proceedings of the IEEE},
  volume={100},
  number={Special Centennial Issue},
  pages={1411--1430},
  year={2012},
  publisher={IEEE}
}

@inproceedings{bornebusch2020towards,
  title={Towards automatic hardware synthesis from formal specification to implementation},
  author={Bornebusch, Fritjof and L{\"u}th, Christoph and Wille, Robert and Drechsler, Rolf},
  booktitle={2020 25th Asia and South Pacific Design Automation Conference (ASP-DAC)},
  pages={375--380},
  year={2020},
  organization={IEEE}
}
@article{gong2018empirical,
  title={An empirical study of the effect of source-level loop transformations on compiler stability},
  author={Gong, Zhangxiaowen and Chen, Zhi and Szaday, Justin and Wong, David and Sura, Zehra and Watkinson, Neftali and Maleki, Saeed and Padua, David and Veidenbaum, Alexander and Nicolau, Alexandru and others},
  journal={Proceedings of the ACM on Programming Languages},
  volume={2},
  number={OOPSLA},
  pages={1--29},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@inproceedings{lavin2018rapidwright,
  title={Rapidwright: Enabling custom crafted implementations for fpgas},
  author={Lavin, Chris and Kaviani, Alireza},
  booktitle={2018 IEEE 26th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)},
  pages={133--140},
  year={2018},
  organization={IEEE}
}

@inproceedings{aho1985efficient,
  title={Efficient tree pattern matching (extended abstract) an aid to code generation},
  author={Aho, Alfred V and Ganapathi, Mahadevan},
  booktitle={Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
  pages={334--340},
  year={1985}
}

@inproceedings{johnson1983code,
  title={Code generation for silicon},
  author={Johnson, Stephen C},
  booktitle={Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
  pages={14--19},
  year={1983}
}

@inproceedings{keutzer1988anatomy,
  title={Anatomy of a hardware compiler},
  author={Keutzer, Kurt and Wolf, Wayne},
  booktitle={Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation},
  pages={95--104},
  year={1988}
}

@inproceedings{callahan1998fast,
  title={Fast module mapping and placement for datapaths in FPGAs},
  author={Callahan, Timothy J and Chong, Philip and DeHon, Andre and Wawrzynek, John},
  booktitle={Proceedings of the 1998 ACM/SIGDA sixth international symposium on Field programmable gate arrays},
  pages={123--132},
  year={1998}
}

@inproceedings{tang2021taping,
  title={Taping out an FPGA in 24 hours with OpenFPGA: The SOFA Project},
  author={Tang, Xifan and Gore, Ganesh and Brown, Grant and Gaillardon, Pierre-Emmanuel},
  booktitle={2021 31st International Conference on Field-Programmable Logic and Applications (FPL)},
  pages={400--400},
  year={2021},
  organization={IEEE}
}

@MISC{smtlib,
  author =	 {Clark Barrett and Pascal Fontaine and Cesare Tinelli},
  title =	 {{The Satisfiability Modulo Theories Library (SMT-LIB)}},
  howpublished = {{\tt www.SMT-LIB.org}},
  year =	 2016,
}



@inproceedings{sofa,
  title={Taping out an FPGA in 24 hours with OpenFPGA: The SOFA Project},
  author={Tang, Xifan and Gore, Ganesh and Brown, Grant and Gaillardon, Pierre-Emmanuel},
  booktitle={2021 31st International Conference on Field-Programmable Logic and Applications (FPL)},
  pages={400--400},
  year={2021},
  organization={IEEE}
}

@inproceedings{durst2020type,
  title={Type-directed scheduling of streaming accelerators},
  author={Durst, David and Feldman, Matthew and Huff, Dillon and Akeley, David and Daly, Ross and Bernstein, Gilbert Louis and Patrignani, Marco and Fatahalian, Kayvon and Hanrahan, Pat},
  booktitle={Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={408--422},
  year={2020}
}

@inproceedings{wolf2013yosys,
  title={Yosys-a free Verilog synthesis suite},
  author={Wolf, Clifford and Glaser, Johann and Kepler, Johannes},
  booktitle={Proceedings of the 21st Austrian Workshop on Microelectronics (Austrochip)},
  year={2013}
}

@inproceedings{rose2012vtr,
  title={The VTR project: architecture and CAD for FPGAs from verilog to routing},
  author={Rose, Jonathan and Luu, Jason and Yu, Chi Wai and Densmore, Opal and Goeders, Jeffrey and Somerville, Andrew and Kent, Kenneth B and Jamieson, Peter and Anderson, Jason},
  booktitle={Proceedings of the ACM/SIGDA international symposium on Field Programmable Gate Arrays},
  pages={77--86},
  year={2012}
}

@inproceedings{xiao2022pld,
  title={PLD: fast FPGA compilation to make reconfigurable acceleration compatible with modern incremental refinement software development},
  author={Xiao, Yuanlong and Micallef, Eric and Butt, Andrew and Hofmann, Matthew and Alston, Marc and Goldsmith, Matthew and Merczynski-Hait, Andrew and DeHon, Andr{\'e}},
  booktitle={Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages={933--945},
  year={2022}
}

@misc{vivado,
  author        = "Xilinx",
  title         = "Vivado User Guide",
  year          = "2022 [Online]",
  howpublished  = "online", 
  url           = "https://docs.xilinx.com/v/u/cdFc3m34xWZu~mVWdoFb_g",
  note = "Accessed 2022-05-01"
}

@article{urbach2022hls,
  title={HLS from PyTorch to System Verilog with MLIR and CIRCT},
  author={Urbach, Mike and Petersen, Morten Borup},
  journal={Latte’22},
  year={2022}
}

@inproceedings{lysecky2005firm,
  title={Firm-core virtual FPGA for just-in-time FPGA compilation},
  author={Lysecky, Roman L and Miller, Kris and Vahid, Frank and Vissers, Kees A},
  booktitle={FPGA},
  pages={271},
  year={2005}
}

@inproceedings{brant2012zuma,
  title={ZUMA: An open FPGA overlay architecture},
  author={Brant, Alexander and Lemieux, Guy GF},
  booktitle={2012 IEEE 20th international symposium on field-programmable custom computing machines},
  pages={93--96},
  year={2012},
  organization={IEEE}
}

@inproceedings{landgraf2021compiler,
  title={Compiler-driven FPGA virtualization with SYNERGY},
  author={Landgraf, Joshua and Yang, Tiffany and Lin, Will and Rossbach, Christopher J and Schkufza, Eric},
  booktitle={Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages={818--831},
  year={2021}
}

@inproceedings{lysecky2004configurable,
  title={A configurable logic architecture for dynamic hardware/software partitioning},
  author={Lysecky, Roman and Vahid, Frank},
  booktitle={Proceedings Design, Automation and Test in Europe Conference and Exhibition},
  volume={1},
  pages={480--485},
  year={2004},
  organization={IEEE}
}

@inproceedings{sekanina2000r,
  title={R.: Design of the Special Fast Reconfigurable Chip Using Common FPGA},
  author={Sekanina, Luk{\'a}{\v{s}} and Richard, RI},
  booktitle={In: Proc. of the Design and Diagnostic of Electronic Circuits and Systems IEEE DDECS'2000, Polygrafia SAF},
  year={2000},
  organization={Citeseer}
}

@inproceedings{lysecky2004dynamic,
  title={Dynamic FPGA routing for just-in-time FPGA compilation},
  author={Lysecky, Roman and Vahid, Frank and Tan, Sheldon X-D},
  booktitle={Proceedings of the 41st annual design automation conference},
  pages={954--959},
  year={2004}
}

@inproceedings{stitt2003dynamic,
  title={Dynamic hardware/software partitioning: A first approach},
  author={Stitt, Greg and Lysecky, Roman and Vahid, Frank},
  booktitle={Proceedings of the 40th annual Design Automation Conference},
  pages={250--255},
  year={2003}
}

@inproceedings{nigam2020predictable,
  title={Predictable accelerator design with time-sensitive affine types},
  author={Nigam, Rachit and Atapattu, Sachille and Thomas, Samuel and Li, Zhijing and Bauer, Theodore and Ye, Yuwei and Koti, Apurva and Sampson, Adrian and Zhang, Zhiru},
  booktitle={Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={393--407},
  year={2020}
}

@inproceedings{sotoudeh2019isa,
  title={ISA mapper: a compute and hardware agnostic deep learning compiler},
  author={Sotoudeh, Matthew and Venkat, Anand and Anderson, Michael and Georganas, Evangelos and Heinecke, Alexander and Knight, Jason},
  booktitle={Proceedings of the 16th ACM International Conference on Computing Frontiers},
  pages={164--173},
  year={2019}
}


@inproceedings{shen2021comprehensive,
  title={A comprehensive study of deep learning compiler bugs},
  author={Shen, Qingchao and Ma, Haoyang and Chen, Junjie and Tian, Yongqiang and Cheung, Shing-Chi and Chen, Xiang},
  booktitle={Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages={968--980},
  year={2021}
}

@misc{ABC,
  title         = "{ABC}: A System for Sequential Synthesis and Verification",
  author        = "\relax Berkeley Logic Synthesis and \relax Verification Group",
  year          = "2005",
  note           = {\url{http://www.eecs.berkeley.edu/~alanmi/abc}},
}

@misc{userguide,
  title         = "UltraScale Architecture {DSP} Slice User Guide",
  author        = "Xilinx",
  year          = "2021",
  note           = {\url{https://docs.xilinx.com/v/u/en-US/ug579-ultrascale-dsp}},
}



@ARTICLE{abc2,
  author={Mishchenko, Alan and Chatterjee, Satrajit and Brayton, Robert K.},
  journal={IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems}, 
  title={Improvements to Technology Mapping for LUT-Based FPGAs}, 
  year={2007},
  volume={26},
  number={2},
  pages={240-253},
  doi={10.1109/TCAD.2006.887925}}



@misc{fpgayahoo,
  author        = "Market Research Future",
  title         = "FPGA Market will Touch USD 25.85 Billion at an 11.2% CAGR by 2030- Report by Market Research Future (MRFR)
",
  year          = "2022",
  howpublished  = "online", 
  url           = "https://finance.yahoo.com/news/fpga-market-touch-usd-25-134500159.html",
  note = "Accessed 2022-05-01"
}

@inproceedings{ehliar2010optimizing,
  title={Optimizing Xilinx designs through primitive instantiation},
  author={Ehliar, Andreas},
  booktitle={Proceedings of the 7th FPGAworld Conference},
  pages={20--27},
  year={2010}
}

@article{senhadji2021mapping,
  title={Mapping Arbitrary Logic Functions onto Carry Chains in FPGAs},
  author={Senhadji-Navarro, Raouf and Garcia-Vargas, Ignacio},
  journal={Electronics},
  volume={11},
  number={1},
  pages={27},
  year={2021},
  publisher={MDPI}
}
@inproceedings{woodruff2022bind,
  title={Bind the gap: compiling real software to hardware FFT accelerators},
  author={Woodruff, Jackson and Armengol-Estap{\'e}, Jordi and Ainsworth, Sam and O'Boyle, Michael FP},
  booktitle={Proceedings of the 43rd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
  pages={687--702},
  year={2022}
}

@inproceedings{ustun2022impress,
  title={IMpress: Large Integer Multiplication Expression Rewriting for FPGA HLS},
  author={Ustun, Ecenur and San, Ismail and Yin, Jiaqi and Yu, Cunxi and Zhang, Zhiru},
  booktitle={2022 IEEE 30th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)},
  pages={1--10},
  year={2022},
  organization={IEEE}
}

@inproceedings{bachrach2012chisel,
  title={Chisel: constructing hardware in a scala embedded language},
  author={Bachrach, Jonathan and Vo, Huy and Richards, Brian and Lee, Yunsup and Waterman, Andrew and Avi{\v{z}}ienis, Rimas and Wawrzynek, John and Asanovi{\'c}, Krste},
  booktitle={DAC Design automation conference 2012},
  pages={1212--1221},
  year={2012},
  organization={IEEE}
}

@inproceedings{brayton2010abc,
  title={ABC: An academic industrial-strength verification tool},
  author={Brayton, Robert and Mishchenko, Alan},
  booktitle={International Conference on Computer Aided Verification},
  pages={24--40},
  year={2010},
  organization={Springer}
}

@article{berkeley1992berkeley,
  title={Berkeley logic interchange format (BLIF)},
  author={Berkeley, UoC},
  journal={Oct Tools Distribution},
  volume={2},
  pages={197--247},
  year={1992}
}

@inproceedings{tang2019openfpga,
  title={OpenFPGA: An opensource framework enabling rapid prototyping of customizable FPGAs},
  author={Tang, Xifan and Giacomin, Edouard and Alacchi, Aur{\'e}lien and Chauviere, Baudouin and Gaillardon, Pierre-Emmanuel},
  booktitle={2019 29th International Conference on Field Programmable Logic and Applications (FPL)},
  pages={367--374},
  year={2019},
  organization={IEEE}
}

@inproceedings{jamieson2010odin,
  title={Odin ii-an open-source verilog hdl synthesis tool for cad research},
  author={Jamieson, Peter and Kent, Kenneth B and Gharibian, Farnaz and Shannon, Lesley},
  booktitle={2010 18th IEEE Annual International Symposium on Field-Programmable Custom Computing Machines},
  pages={149--156},
  year={2010},
  organization={IEEE}
}

@inproceedings{betz1997vpr,
  title={VPR: A new packing, placement and routing tool for FPGA research},
  author={Betz, Vaughn and Rose, Jonathan},
  booktitle={International Workshop on Field Programmable Logic and Applications},
  pages={213--222},
  year={1997},
  organization={Springer}
}

@inproceedings{jamieson2005verilog,
  title={A verilog RTL synthesis tool for heterogeneous FPGAs},
  author={Jamieson, Peter and Rose, Jonathan},
  booktitle={International Conference on Field Programmable Logic and Applications, 2005.},
  pages={305--310},
  year={2005},
  organization={IEEE}
}

 @misc{1993lpm, title={EIA-IS-103 : Library of Parameterized Modules (LPM)}, url={https://global.ihs.com/doc_detail.cfm?document_name=EIA-IS-103&amp;item_s_key=00685961}, journal={EIA-IS-103 : Library of Parameterized Modules (LPM)}} 
 
  @misc{lpmaltera, title={LPM Quick Reference Guide}, url={http://www.primrosebank.net/computers/mtx/projects/mtxplus/data/lpm.pdf}, author={Altera}} 
  
@inproceedings{vanhattum2021vectorization,
  title={Vectorization for digital signal processors via equality saturation},
  author={VanHattum, Alexa and Nigam, Rachit and Lee, Vincent T and Bornholt, James and Sampson, Adrian},
  booktitle={Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages={874--886},
  year={2021}
}

@misc{unisim, title={Xilinx {UNISIM} {Library}}, url={https://docs.xilinx.com/r/2021.1-English/ug900-vivado-logic-simulation/UNISIM-Library},} 

@inproceedings{btor,
  author = {Niemetz, Aina and Preiner, Mathias and Wolf, Clifford and Biere, Armin},
  biburl = {https://www.bibsonomy.org/bibtex/21c2a57b0731f0b5f2e33ea89e723f5a5/dblp},
  booktitle = {CAV (1)},
  isbn = {978-3-319-96145-3},
  keywords = {dblp},
  pages = {587-595},
  publisher = {Springer},
  series = {Lecture Notes in Computer Science},
  title = {Btor2 , BtorMC and Boolector 3.0.},
  volume = 10981,
  year = 2018
}

@article{seger2005industrially,
  title={An industrially effective environment for formal hardware verification},
  author={Seger, C-JH and Jones, Robert B and O'Leary, John W and Melham, Tom and Aagaard, Mark D and Barrett, Clark and Syme, Don},
  journal={IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  volume={24},
  number={9},
  pages={1381--1405},
  year={2005},
  publisher={IEEE}
}

@inproceedings{joyce2005hol,
  title={The HOL-Voss system: Model-checking inside a general-purpose theorem-prover},
  author={Joyce, Jeffrey and Seger, Carl},
  booktitle={Higher Order Logic Theorem Proving and Its Applications: 6th International Workshop, HUG'93 Vancouver, BC, Canada, August 11--13, 1993 Proceedings},
  pages={185--198},
  year={2005},
  organization={Springer}
}

@misc{githubGitHubTeamVossVossII,
	author = {},
	title = {{G}it{H}ub - {T}eam{V}oss/{V}oss{I}{I}: {T}he source code to the {V}oss {I}{I} {H}ardware {V}erification {S}uite --- github.com},
	howpublished = {\url{https://github.com/TeamVoss/VossII}},
	year = {},
	note = {[Accessed 01-May-2023]},
}

@book{gulwani2017program,
author = {Gulwani, Sumit and Polozov, Alex and Singh, Rishabh},
title = {Program Synthesis},
booktitle = {Foundations and Trends in Programming Languages},
year = {2017},
month = {August},
abstract = {Program synthesis is the task of automatically ﬁnding a program in the underlying programming language that satisﬁes the user intent expressed in the form of some speciﬁcation. Since the inception of AI in the 1950s, this problem has been considered the holy grail of Computer Science. Despite inherent challenges in the problem such as ambiguity of user intent and a typically enormous search space of programs, the ﬁeld of program synthesis has developed many diﬀerent techniques that enable program synthesis in diﬀerent real-life application domains. It is now used successfully in software engineering, biological discovery, computer-aided education, end-user programming, and data cleaning. In the last decade, several applications of synthesis in the ﬁeld of programming by examples have been deployed in mass-market industrial products. This survey is a general overview of the state-of-the-art approaches to program synthesis, its applications, and subﬁelds. We discuss the general principles common to all modern synthesis approaches such as syntactic bias, oracle-guided inductive search, and optimization techniques. We then present a literature review covering the four most common state-of-the-art techniques in program synthesis: enumerative search, constraint solving, stochastic search, and deduction-based programming by examples. We conclude with a brief list of future horizons for the ﬁeld.},
publisher = {NOW},
url = {https://www.microsoft.com/en-us/research/publication/program-synthesis/},
pages = {1-119},
volume = {4},
}

@book{solar2008program,
  title={Program synthesis by sketching},
  author={Solar-Lezama, Armando},
  year={2008},
  publisher={University of California, Berkeley}
}

@inproceedings{herklotz2020finding,
  title={Finding and understanding bugs in FPGA synthesis tools},
  author={Herklotz, Yann and Wickerson, John},
  booktitle={Proceedings of the 2020 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
  pages={277--287},
  year={2020}
}

@inproceedings{daly2022synthesizing,
  title={Synthesizing Instruction Selection Rewrite Rules from RTL using SMT},
  author={Daly, Ross and Donovick, Caleb and Melchert, Jackson and Setaluri, Rajsekhar and Bullock, Nestan Tsiskaridze and Raina, Priyanka and Barrett, Clark and Hanrahan, Pat},
  booktitle={CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN--FMCAD 2022},
  pages={139},
  year={2022}
}

@inproceedings{sisco2022synthesis,
    author ={Sisco, Zachary D. and Balkind, Jonathan and Sherwood, Timothy and Hardekopf, Ben},
    title = {A Position on Program Synthesis for Processor Development},
    booktitle = {Workshop on Languages, Tools, and Techniques for Accelerator Design--LATTE 2022},
    year = {2022}
}

@inproceedings{ardeshiricham19verisketch,
author = {Ardeshiricham, Armaiti and Takashima, Yoshiki and Gao, Sicun and Kastner, Ryan},
title = {VeriSketch: Synthesizing Secure Hardware Designs with Timing-Sensitive Information Flow Properties},
year = {2019},
isbn = {9781450367479},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3319535.3354246},
doi = {10.1145/3319535.3354246},
abstract = {We present VeriSketch, a security-oriented program synthesis framework for developing hardware designs with formal guarantee of functional and security specifications. VeriSketch defines a synthesis language, a code instrumentation framework for specifying and inferring timing-sensitive information flow properties, and uses specialized constraint-based synthesis for generating HDL code that enforces the specifications. We show the power of VeriSketch through security-critical hardware design examples, including cache controllers, thread schedulers, and system-on-chip arbiters, with formal guarantee of security properties such as absence of timing side-channels, confidentiality, and isolation.},
booktitle = {Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security},
pages = {1623–1638},
numpages = {16},
keywords = {information flow tracking, program synthesis, security verification, timing side channel, hardware security},
location = {London, United Kingdom},
series = {CCS '19}
}

@INPROCEEDINGS{becker14sketchilog,
  author={Becker, Andrew and Novo, David and Ienne, Paolo},
  booktitle={2014 Design, Automation \& Test in Europe Conference \& Exhibition (DATE)}, 
  title={SKETCHILOG: Sketching combinational circuits}, 
  year={2014},
  volume={},
  number={},
  pages={1-4},
  doi={10.7873/DATE.2014.165}}


@inproceedings{gao2019chipmunk,
author = {Gao, Xiangyu and Kim, Taegyun and Varma, Aatish Kishan and Sivaraman, Anirudh and Narayana, Srinivas},
title = {Autogenerating Fast Packet-Processing Code Using Program Synthesis},
year = {2019},
isbn = {9781450370202},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3365609.3365858},
doi = {10.1145/3365609.3365858},
abstract = {Packet-processing code should be fast. But, it is hard to write fast code for programmable substrates such as high-speed switches, multicore SoC SmarfNICs, FP-GAs, middleboxes, and the end-host stack. Today, expert developers with deep familiarity with the underlying hardware handcraft such code. Making things worse, building optimizing compilers for these substrates requires significant development effort, which may not be available for these new, niche, and evolving substrates.We propose an alternative: to automatically generate fast packet-processing code using program synthesis. For the domain of packet processing, using synthesis can generate faster code than an optimizing compiler at the cost of increased compile time. As a case study, we apply program synthesis to build a code generator, Chipmunk, for a simulator of the protocol-independent switch architecture (PISA). Chipmunk generates code for many programs that a previous code generator based on classical compiler optimizations rejects, and code generated by Chipmunk uses much fewer hardware resources. We also outline future directions in applying program synthesis to code generation for packet processing.},
booktitle = {Proceedings of the 18th ACM Workshop on Hot Topics in Networks},
pages = {150–160},
numpages = {11},
location = {Princeton, NJ, USA},
series = {HotNets '19}
}

@inbook{barbosa22cvc5,
author = {Barbosa, Haniel and Barrett, Clark and Brain, Martin and Kremer, Gereon and Lachnitt, Hanna and Mann, Makai and Mohamed, Abdalrhman and Mohamed, Mudathir and Niemetz, Aina and Nötzli, Andres and Ozdemir, Alex and Preiner, Mathias and Reynolds, Andrew and Sheng, Ying and Tinelli, Cesare and Zohar, Yoni},
year = {2022},
month = {01},
pages = {415-442},
title = {cvc5: A Versatile and Industrial-Strength SMT Solver},
isbn = {978-3-030-99523-2},
doi = {10.1007/978-3-030-99524-9_24}
}

@inproceedings{zhu2022fpgaheterogeneity,
author = {Zhu, Ziran and Mei, Yangjie and Li, Zijun and Lin, Jingwen and Chen, Jianli and Yang, Jun and Chang, Yao-Wen},
title = {High-Performance Placement for Large-Scale Heterogeneous FPGAs with Clock Constraints},
year = {2022},
isbn = {9781450391429},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3489517.3530567},
doi = {10.1145/3489517.3530567},
abstract = {With the increasing complexity of the field-programmable gate array (FPGA) architecture, heterogeneity and clock constraints have greatly challenged FPGA placement. In this paper, we present a high-performance placement algorithm for large-scale heterogeneous FPGAs with clock constraints. We first propose a connectivity-aware and type-balanced clustering method to construct the hierarchy and improve the scalability. In each hierarchy level, we develop a novel hybrid penalty and augmented Lagrangian method to formulate the heterogeneous and clock-aware placement as a sequence of unconstrained optimization subproblems and adopt the Adam method to solve each unconstrained optimization subproblem. Then, we present a matching-based IP blocks legalization to legalize the RAMs and DSPs, and a multi-stage packing technique is proposed to cluster FFs and LUTs into HCLBs. Finally, history-based legalization is developed to legalize CLBs in an FPGA. Based on the ISPD 2017 clock-aware FPGA placement contest benchmarks, experimental results show that our algorithm achieves the smallest routed wirelength for all the benchmarks among all published works in a reasonable runtime.},
booktitle = {Proceedings of the 59th ACM/IEEE Design Automation Conference},
pages = {643–648},
numpages = {6},
location = {San Francisco, California},
series = {DAC '22}
}

@PhdThesis{Jonas2019thesis,
author = {Jon\'{a}\v{s}, Martin},
TITLE = "Satisfiability of Quantified Bit-Vector Formulas: Theory and Practice",
YEAR = "2019 [retrieved 2023-08-09]",
TYPE = "Dissertation",
SCHOOL = "Masaryk University, Faculty of Informatics, Brno",
NOTE = "SUPERVISOR : Jan Strejček",
URL="https://is.muni.cz/th/cg101/",
}
@article{niemetz2020bitwuzla,
  title={Bitwuzla at the SMT-COMP 2020},
  author={Niemetz, Aina and Preiner, Mathias},
  journal={arXiv preprint arXiv:2006.01621},
  year={2020}
}

@inproceedings{Bernstein2021WhatAT,
  title={What are the Semantics of Hardware?},
  author={Gilbert Louis Bernstein and Jonathan Ragan-Kelley},
  year={2021},
  url={https://api.semanticscholar.org/CorpusID:233217091},
  booktitle    = {Workshop on Languages, Tools, and Techniques for Accelerator Design (LATTE)},
}

@article{10.1145/3140587.3062353,
author = {Bornholt, James and Torlak, Emina},
title = {Synthesizing Memory Models from Framework Sketches and Litmus Tests},
year = {2017},
issue_date = {June 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/3140587.3062353},
doi = {10.1145/3140587.3062353},
abstract = {A memory consistency model specifies which writes to shared memory a given read may see. Ambiguities or errors in these specifications can lead to bugs in both compilers and applications. Yet architectures usually define their memory models with prose and litmus tests—small concurrent programs that demonstrate allowed and forbidden outcomes. Recent work has formalized the memory models of common architectures through substantial manual effort, but as new architectures emerge, there is a growing need for tools to aid these efforts. This paper presents MemSynth, a synthesis-aided system for reasoning about axiomatic specifications of memory models. MemSynth takes as input a set of litmus tests and a framework sketch that defines a class of memory models. The sketch comprises a set of axioms with missing expressions (or holes). Given these inputs, MemSynth synthesizes a completion of the axioms—i.e., a memory model—that gives the desired outcome on all tests. The MemSynth engine employs a novel embedding of bounded relational logic in a solver-aided programming language, which enables it to tackle complex synthesis queries intractable to existing relational solvers. This design also enables it to solve new kinds of queries, such as checking if a set of litmus tests unambiguously defines a memory model within a framework sketch. We show that MemSynth can synthesize specifications for x86 in under two seconds, and for PowerPC in 12 seconds from 768 litmus tests. Our ambiguity check identifies missing tests from both the Intel x86 documentation and the validation suite of a previous PowerPC formalization. We also used MemSynth to reproduce, debug, and automatically repair a paper on comparing memory models in just two days.},
journal = {SIGPLAN Not.},
month = {jun},
pages = {467–481},
numpages = {15},
keywords = {program synthesis, weak memory models}
}


@inproceedings{vanGeffenJITSynth,
author = {Van Geffen, Jacob and Nelson, Luke and Dillig, Isil and Wang, Xi and Torlak, Emina},
title = {Synthesizing JIT Compilers for In-Kernel DSLs},
year = {2020},
isbn = {978-3-030-53290-1},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-030-53291-8_29},
doi = {10.1007/978-3-030-53291-8_29},
abstract = {Modern operating systems allow user-space applications to submit code for kernel execution through the use of in-kernel domain specific languages (DSLs). Applications use these DSLs to customize system policies and add new functionality. For performance, the kernel executes them via just-in-time (JIT) compilation. The correctness of these JITs is crucial for the security of the kernel: bugs in in-kernel JITs have led to numerous critical issues and patches.This paper presents JitSynth, the first tool for synthesizing verified JITs for in-kernel DSLs. JitSynth takes as input interpreters for the source DSL and the target instruction set architecture. Given these interpreters, and a mapping from source to target states, JitSynth synthesizes a verified JIT compiler from the source to the target. Our key idea is to formulate this synthesis problem as one of synthesizing a per-instruction compiler for abstract register machines. Our core technical contribution is a new compiler metasketch that enables JitSynth to efficiently explore the resulting synthesis search space. To evaluate JitSynth, we use it to synthesize a JIT from eBPF to RISC-V and compare to a recently developed Linux JIT. The synthesized JIT avoids all known bugs in the Linux JIT, with an average slowdown of in the performance of the generated code. We also use JitSynth to synthesize JITs for two additional source-target pairs. The results show that JitSynth offers a promising new way to develop verified JITs for in-kernel DSLs.},
booktitle = {Computer Aided Verification: 32nd International Conference, CAV 2020, Los Angeles, CA, USA, July 21–24, 2020, Proceedings, Part II},
pages = {564–586},
numpages = {23},
keywords = {Synthesis, Symbolic execution, Just-in-time compilation},
location = {Los Angeles, CA, USA}
}

@misc{rosette:synthesis,
  author       = {Emina Torlak},
  title        = {The {Rosette} Guide: Synthesis},
  howpublished = {\url{https://docs.racket-lang.org/rosette-guide/ch_syntactic-forms_rosette.html#%28part._.Synthesis%29}},
  year         = {2022},
}

@article{rosette4,
author = {Porncharoenwase, Sorawee and Nelson, Luke and Wang, Xi and Torlak, Emina},
title = {A Formal Foundation for Symbolic Evaluation with Merging},
year = {2022},
issue_date = {January 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {POPL},
url = {https://doi.org/10.1145/3498709},
doi = {10.1145/3498709},
journal = {Proc. ACM Program. Lang.},
month = jan,
articleno = {47},
numpages = {28},
keywords = {symbolic evaluation, state merging}
}

@techreport{racket:ref,
  author =        {Matthew Flatt and {PLT}},
  institution =   {{PLT Design Inc.}},
  number =        {{PLT-TR-2010-1}},
  title =         {Reference: {Racket}},
  year =          {2010},
}

@Article{racket,
  title         = {A Programmable Programming Language},
  author        = {Matthias Felleisen and Robert Bruce Findler and Matthew
                  Flatt and Shriram Krishnamurthi and Eli Barzilay and Jay
                  McCarthy and Sam Tobin-Hochstadt},
  journal       = cacm,
  volume        = 61,
  number        = 3,
  year          = 2018,
  month         = mar,
  pages         = {62--71},
  doi           = {10.1145/3127323},
}  

@inproceedings{bitwuzla,
  author       = {Aina Niemetz and
                  Mathias Preiner},
  editor       = {Constantin Enea and
                  Akash Lal},
  title        = {Bitwuzla},
  booktitle    = {Computer Aided Verification - 35th International Conference, {CAV}
                  2023, Paris, France, July 17-22, 2023, Proceedings, Part {II}},
  series       = {Lecture Notes in Computer Science},
  volume       = {13965},
  pages        = {3--17},
  publisher    = {Springer},
  year         = {2023},
  url          = {https://doi.org/10.1007/978-3-031-37703-7\_1},
  doi          = {10.1007/978-3-031-37703-7\_1},
  timestamp    = {Fri, 21 Jul 2023 17:55:59 +0200},
  biburl       = {https://dblp.org/rec/conf/cav/NiemetzP23.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{kringen23semiauto,
    author = {Harlan Kringen, Zachary Sisco, Jonathan Balkind, Timothy Sherwood, Ben Hardekopf},
    title = {Semi-Automated Translation of a Formal ISA Specification to Hardware},
    journal = {Programming Languages for Architecture (PLARCH 2023)},
    year = {2023}
}

@article{sisco2023loop,
author = {Sisco, Zachary D. and Balkind, Jonathan and Sherwood, Timothy and Hardekopf, Ben},
title = {Loop Rerolling for Hardware Decompilation},
year = {2023},
issue_date = {June 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {PLDI},
url = {https://doi.org/10.1145/3591237},
doi = {10.1145/3591237},
abstract = {We introduce the new problem of hardware decompilation. Analogous to software decompilation, hardware decompilation is about analyzing a low-level artifact—in this case a netlist, i.e., a graph of wires and logical gates representing a digital circuit—in order to recover higher-level programming abstractions, and using those abstractions to generate code written in a hardware description language (HDL). The overall problem of hardware decompilation requires a number of pieces. In this paper we focus on one specific piece of the puzzle: a technique we call hardware loop rerolling. Hardware loop rerolling leverages clone detection and program synthesis techniques to identify repeated logic in netlists (such as would be synthesized from loops in the original HDL code) and reroll them into syntactic loops in the recovered HDL code. We evaluate hardware loop rerolling for hardware decompilation over a set of hardware design benchmarks written in the PyRTL HDL and industry standard SystemVerilog. Our implementation identifies and rerolls loops in 52 out of 53 of the netlists in our benchmark suite, and we show three examples of how hardware decompilation can provide concrete benefits: transpilation between HDLs, faster simulation times over netlists (with mean speedup of 6x), and artifact compaction (39% smaller on average).},
journal = {Proc. ACM Program. Lang.},
month = {jun},
articleno = {123},
numpages = {23},
keywords = {loop rerolling, program synthesis, hardware decompilation}
}

@book{MacKenzieComputingTrust,
    author = {MacKenzie, Donald},
    title = "{Mechanizing Proof: Computing, Risk, and Trust}",
    publisher = {The MIT Press},
    year = {2001},
    month = {09},
    abstract = "{Most aspects of our private and social lives—our safety, the integrity of the financial system, the functioning of utilities and other services, and national security—now depend on computing. But how can we know that this computing is trustworthy? In Mechanizing Proof, Donald MacKenzie addresses this key issue by investigating the interrelations of computing, risk, and mathematical proof over the last half century from the perspectives of history and sociology. His discussion draws on the technical literature of computer science and artificial intelligence and on extensive interviews with participants.MacKenzie argues that our culture now contains two ideals of proof: proof as traditionally conducted by human mathematicians, and formal, mechanized proof. He describes the systems constructed by those committed to the latter ideal and the many questions those systems raise about the nature of proof. He looks at the primary social influence on the development of automated proof—the need to predict the behavior of the computer systems upon which human life and security depend—and explores the involvement of powerful organizations such as the National Security Agency. He concludes that in mechanizing proof, and in pursuing dependable computer systems, we do not obviate the need for trust in our collective human judgment.}",
    isbn = {9780262278829},
    doi = {10.7551/mitpress/4529.001.0001},
    url = {https://doi.org/10.7551/mitpress/4529.001.0001},
}
@book{BradleyDecidability,
    title="The Calculus of Computation",
    author="Bradley , Aaron R. and Manna, Zohar",
    year=2007,
    publisher="Springer Berlin, Heidelberg"
}

@misc{xilinxforum1,
  title = {{DSP48E2} inference for convolution/multiplication of 8-bit operands},
  howpublished = {\url{https://support.xilinx.com/s/question/0D52E00006hpnGVSAY/dsp48e2-inference-for-convolutionmultiplication-of-8bit-operands?language=en_US}},
  note = {Accessed: 2023-12-07}
}
@misc{xilinxforum2,
  title = {Can not correctly infer {"A*B+C"} to {DSP48E2}},
  howpublished = {\url{https://support.xilinx.com/s/question/0D54U00006AqPXFSA3/can-not-correctly-infer-abc-to-dsp48e2?language=en_US}},
  note = {Accessed: 2023-12-07}
}
@misc{inferringreddit,
  title = {Inferring {SIMD} accumulator with {Xilinx DSP48e2}},
  howpublished = {\url{https://old.reddit.com/r/FPGA/comments/tr9vzn/inferring_simd_accumulator_with_xilinx_dsp48e2/}},
  note = {Accessed: 2023-12-07}
}

@article{dutertre2006yices,
  title={The yices smt solver},
  author={Dutertre, Bruno and De Moura, Leonardo}
}

@inproceedings{dutertre2014yices,
  title={Yices 2.2},
  author={Dutertre, Bruno},
  booktitle={International Conference on Computer Aided Verification},
  pages={737--744},
  year={2014},
  organization={Springer}
}

@misc{stp, 
title={The Simple Theorem Prover},
url={https://stp.github.io/}}